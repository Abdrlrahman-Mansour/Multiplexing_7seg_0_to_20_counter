

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Aug 05 03:05:00 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39   000000                     
    40                           ; Generated 23/03/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4620 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   0019EC                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _port_reg
    80   0019EC  80                 	db	128
    81   0019ED  0F                 	db	15
    82   0019EE  81                 	db	129
    83   0019EF  0F                 	db	15
    84   0019F0  82                 	db	130
    85   0019F1  0F                 	db	15
    86   0019F2  83                 	db	131
    87   0019F3  0F                 	db	15
    88   0019F4  84                 	db	132
    89   0019F5  0F                 	db	15
    90                           
    91                           ;initializer for _lat_reg
    92   0019F6  89                 	db	137
    93   0019F7  0F                 	db	15
    94   0019F8  8A                 	db	138
    95   0019F9  0F                 	db	15
    96   0019FA  8B                 	db	139
    97   0019FB  0F                 	db	15
    98   0019FC  8C                 	db	140
    99   0019FD  0F                 	db	15
   100   0019FE  8D                 	db	141
   101   0019FF  0F                 	db	15
   102                           
   103                           ;initializer for _tris_reg
   104   001A00  92                 	db	146
   105   001A01  0F                 	db	15
   106   001A02  93                 	db	147
   107   001A03  0F                 	db	15
   108   001A04  94                 	db	148
   109   001A05  0F                 	db	15
   110   001A06  95                 	db	149
   111   001A07  0F                 	db	15
   112   001A08  96                 	db	150
   113   001A09  0F                 	db	15
   114                           
   115                           ;initializer for _RB7_Flag
   116   001A0A  01                 	db	1
   117                           
   118                           ;initializer for _RB6_Flag
   119   001A0B  01                 	db	1
   120                           
   121                           ;initializer for _RB5_Flag
   122   001A0C  01                 	db	1
   123                           
   124                           ;initializer for _RB4_Flag
   125   001A0D  01                 	db	1
   126                           
   127                           ;initializer for _timer0_obj
   128   001A0E  AE                 	db	low _tmr0_isr
   129   001A0F  1A                 	db	high _tmr0_isr
   130   001A10  00                 	db	0
   131   001A11  04                 	db	4
   132   001A12  0BDC               	dw	3036
   133   001A14  05                 	db	5
   134                           
   135                           ;initializer for _seven_seg_obj
   136   001A15  00                 	db	0
   137   001A16  08                 	db	8
   138   001A17  10                 	db	16
   139   001A18  18                 	db	24
   140   001A19  00                 	db	0
   141                           
   142                           ;initializer for _tens
   143   001A1A  0A                 	db	10
   144                           
   145                           ;initializer for _ones
   146   001A1B  02                 	db	2
   147   000000                     _TMR0L	set	4054
   148   000000                     _TMR0H	set	4055
   149   000000                     _INTCON2bits	set	4081
   150                           
   151                           	psect	nvCOMRAM
   152   00005C                     __pnvCOMRAM:
   153                           	callstack 0
   154   00005C                     _ret:
   155                           	callstack 0
   156   00005C                     	ds	1
   157   000000                     _PORTBbits	set	3969
   158   000000                     _PORTE	set	3972
   159   000000                     _PORTD	set	3971
   160   000000                     _PORTC	set	3970
   161   000000                     _PORTB	set	3969
   162   000000                     _PORTA	set	3968
   163   000000                     _LATA	set	3977
   164   000000                     _TRISA	set	3986
   165   000000                     _T0CONbits	set	4053
   166   000000                     _INTCON3bits	set	4080
   167   000000                     _INTCONbits	set	4082
   168   000000                     _TRISE	set	3990
   169   000000                     _TRISD	set	3989
   170   000000                     _TRISC	set	3988
   171   000000                     _TRISB	set	3987
   172   000000                     _LATE	set	3981
   173   000000                     _LATD	set	3980
   174   000000                     _LATC	set	3979
   175   000000                     _LATB	set	3978
   176                           
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   001906                     __pcinit:
   181                           	callstack 0
   182   001906                     start_initialization:
   183                           	callstack 0
   184   001906                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Initialize objects allocated to COMRAM (48 bytes)
   188                           ; load TBLPTR registers with __pidataCOMRAM
   189   001906  0EEC               	movlw	low __pidataCOMRAM
   190   001908  6EF6               	movwf	tblptrl,c
   191   00190A  0E19               	movlw	high __pidataCOMRAM
   192   00190C  6EF7               	movwf	tblptrh,c
   193   00190E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   194   001910  6EF8               	movwf	tblptru,c
   195   001912  EE00  F001         	lfsr	0,__pdataCOMRAM
   196   001916  EE10 F030          	lfsr	1,48
   197   00191A                     copy_data0:
   198   00191A  0009               	tblrd		*+
   199   00191C  CFF5 FFEE          	movff	tablat,postinc0
   200   001920  50E5               	movf	postdec1,w,c
   201   001922  50E1               	movf	fsr1l,w,c
   202   001924  E1FA               	bnz	copy_data0
   203                           
   204                           ; Clear objects allocated to COMRAM (27 bytes)
   205   001926  EE00  F031         	lfsr	0,__pbssCOMRAM
   206   00192A  0E1B               	movlw	27
   207   00192C                     clear_0:
   208   00192C  6AEE               	clrf	postinc0,c
   209   00192E  06E8               	decf	wreg,f,c
   210   001930  E1FD               	bnz	clear_0
   211   001932                     end_of_initialization:
   212                           	callstack 0
   213   001932                     __end_of__initialization:
   214                           	callstack 0
   215   001932  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216   001934  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   217   001936  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218   001938  6EF8               	movwf	tblptru,c
   219   00193A  0100               	movlb	0
   220   00193C  EF8D  F00B         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223   000031                     __pbssCOMRAM:
   224                           	callstack 0
   225   000031                     _timer0_preload:
   226                           	callstack 0
   227   000031                     	ds	2
   228   000033                     _Timer0_InterruptHandler:
   229                           	callstack 0
   230   000033                     	ds	2
   231   000035                     _RB7_InterruptHandler_LOW:
   232                           	callstack 0
   233   000035                     	ds	2
   234   000037                     _RB7_InterruptHandler_HIGH:
   235                           	callstack 0
   236   000037                     	ds	2
   237   000039                     _RB6_InterruptHandler_LOW:
   238                           	callstack 0
   239   000039                     	ds	2
   240   00003B                     _RB6_InterruptHandler_HIGH:
   241                           	callstack 0
   242   00003B                     	ds	2
   243   00003D                     _RB5_InterruptHandler_LOW:
   244                           	callstack 0
   245   00003D                     	ds	2
   246   00003F                     _RB5_InterruptHandler_HIGH:
   247                           	callstack 0
   248   00003F                     	ds	2
   249   000041                     _RB4_InterruptHandler_LOW:
   250                           	callstack 0
   251   000041                     	ds	2
   252   000043                     _RB4_InterruptHandler_HIGH:
   253                           	callstack 0
   254   000043                     	ds	2
   255   000045                     _INT2_InterruptHandler:
   256                           	callstack 0
   257   000045                     	ds	2
   258   000047                     _INT1_InterruptHandler:
   259                           	callstack 0
   260   000047                     	ds	2
   261   000049                     _INT0_InterruptHandler:
   262                           	callstack 0
   263   000049                     	ds	2
   264   00004B                     _number:
   265                           	callstack 0
   266   00004B                     	ds	1
   267                           
   268                           	psect	dataCOMRAM
   269   000001                     __pdataCOMRAM:
   270                           	callstack 0
   271   000001                     _port_reg:
   272                           	callstack 0
   273   000001                     	ds	10
   274   00000B                     _lat_reg:
   275                           	callstack 0
   276   00000B                     	ds	10
   277   000015                     _tris_reg:
   278                           	callstack 0
   279   000015                     	ds	10
   280   00001F                     _RB7_Flag:
   281                           	callstack 0
   282   00001F                     	ds	1
   283   000020                     _RB6_Flag:
   284                           	callstack 0
   285   000020                     	ds	1
   286   000021                     _RB5_Flag:
   287                           	callstack 0
   288   000021                     	ds	1
   289   000022                     _RB4_Flag:
   290                           	callstack 0
   291   000022                     	ds	1
   292   000023                     _timer0_obj:
   293                           	callstack 0
   294   000023                     	ds	7
   295   00002A                     _seven_seg_obj:
   296                           	callstack 0
   297   00002A                     	ds	5
   298   00002F                     _tens:
   299                           	callstack 0
   300   00002F                     	ds	1
   301   000030                     _ones:
   302                           	callstack 0
   303   000030                     	ds	1
   304                           
   305                           	psect	cstackCOMRAM
   306   00004C                     __pcstackCOMRAM:
   307                           	callstack 0
   308   00004C                     RB4_ISR@RB4_Source:
   309                           	callstack 0
   310   00004C                     RB5_ISR@RB5_Source:
   311                           	callstack 0
   312   00004C                     RB6_ISR@RB6_Source:
   313                           	callstack 0
   314   00004C                     RB7_ISR@RB7_Source:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x0
   318   00004C                     	ds	1
   319   00004D                     ??_InterruptManager:
   320                           
   321                           ; 1 bytes @ 0x1
   322   00004D                     	ds	2
   323   00004F                     ?___awdiv:
   324                           	callstack 0
   325   00004F                     ?___awmod:
   326                           	callstack 0
   327   00004F                     gpio_pin_direction_init@_pin_config:
   328                           	callstack 0
   329   00004F                     gpio_pin_write_logic@_pin_config:
   330                           	callstack 0
   331   00004F                     Timer0_prescaler_config@timer:
   332                           	callstack 0
   333   00004F                     Timer0_Mode_Select@timer:
   334                           	callstack 0
   335   00004F                     Timer0_Reg_Size@timer:
   336                           	callstack 0
   337   00004F                     ___awdiv@dividend:
   338                           	callstack 0
   339   00004F                     ___awmod@dividend:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x3
   343   00004F                     	ds	1
   344   000050                     ??_gpio_pin_direction_init:
   345   000050                     ??_Timer0_prescaler_config:
   346   000050                     gpio_pin_write_logic@logic:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x4
   350   000050                     	ds	1
   351   000051                     ??_gpio_pin_write_logic:
   352   000051                     Timer0_Init@timer:
   353                           	callstack 0
   354   000051                     ___awdiv@divisor:
   355                           	callstack 0
   356   000051                     ___awmod@divisor:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x5
   360   000051                     	ds	1
   361   000052                     ??_Timer0_Init:
   362                           
   363                           ; 1 bytes @ 0x6
   364   000052                     	ds	1
   365   000053                     ___awdiv@counter:
   366                           	callstack 0
   367   000053                     ___awmod@counter:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x7
   371   000053                     	ds	1
   372   000054                     Timer0_Init@ret:
   373                           	callstack 0
   374   000054                     ___awdiv@sign:
   375                           	callstack 0
   376   000054                     ___awmod@sign:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x8
   380   000054                     	ds	1
   381   000055                     gpio_pin_direction_init@ret:
   382                           	callstack 0
   383   000055                     ___awdiv@quotient:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x9
   387   000055                     	ds	1
   388   000056                     gpio_pin_write_logic@ret:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xA
   392   000056                     	ds	1
   393   000057                     seven_segment_init@seg:
   394                           	callstack 0
   395   000057                     gpio_port_write_logic@logic:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xB
   399   000057                     	ds	1
   400   000058                     ??_gpio_port_write_logic:
   401   000058                     seven_segment_init@ret:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xC
   405   000058                     	ds	1
   406   000059                     
   407                           ; 1 bytes @ 0xD
   408   000059                     	ds	1
   409   00005A                     gpio_port_write_logic@port:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0xE
   413   00005A                     	ds	1
   414   00005B                     ??_main:
   415                           
   416                           ; 1 bytes @ 0xF
   417   00005B                     	ds	1
   418                           
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 61 in file "application.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  2   30[None  ] int 
   431 ;; Registers used:
   432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;Total ram usage:        1 bytes
   443 ;; Hardware stack levels required when called: 6
   444 ;; This function calls:
   445 ;;		___awdiv
   446 ;;		___awmod
   447 ;;		_gpio_port_write_logic
   448 ;;		_init
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text0
   455   00171A                     __ptext0:
   456                           	callstack 0
   457   00171A                     _main:
   458                           	callstack 25
   459   00171A                     
   460                           ;application.c: 62:     init();
   461   00171A  EC0E  F00D         	call	_init	;wreg free
   462   00171E                     l31:
   463                           
   464                           ;application.c: 64:             ret = gpio_port_write_logic(PORTC_INDEX, 0x01);
   465   00171E  0E01               	movlw	1
   466   001720  6E57               	movwf	gpio_port_write_logic@logic^0,c
   467   001722  0E02               	movlw	2
   468   001724  ECBD  F00C         	call	_gpio_port_write_logic
   469   001728  6E5C               	movwf	_ret^0,c
   470                           
   471                           ;application.c: 65:             ret = gpio_port_write_logic(PORTA_INDEX, ((uint8)(number
      +                          /10)));
   472   00172A  C04B  F04F         	movff	_number,___awdiv@dividend
   473   00172E  6A50               	clrf	(___awdiv@dividend+1)^0,c
   474   001730  0E00               	movlw	0
   475   001732  6E52               	movwf	(___awdiv@divisor+1)^0,c
   476   001734  0E0A               	movlw	10
   477   001736  6E51               	movwf	___awdiv@divisor^0,c
   478   001738  EC77  F00A         	call	___awdiv	;wreg free
   479   00173C  504F               	movf	?___awdiv^0,w,c
   480   00173E  6E57               	movwf	gpio_port_write_logic@logic^0,c
   481   001740  0E00               	movlw	0
   482   001742  ECBD  F00C         	call	_gpio_port_write_logic
   483   001746  6E5C               	movwf	_ret^0,c
   484   001748                     
   485                           ;application.c: 66:             _delay((unsigned long)((10)*(8000000UL/4000.0)));
   486   001748  0E1A               	movlw	26
   487   00174A  6E5B               	movwf	??_main^0,c
   488   00174C  0EF8               	movlw	248
   489   00174E                     u1787:
   490   00174E  2EE8               	decfsz	wreg,f,c
   491   001750  D7FE               	bra	u1787
   492   001752  2E5B               	decfsz	??_main^0,f,c
   493   001754  D7FC               	bra	u1787
   494   001756  D000               	nop2	
   495   001758                     
   496                           ;application.c: 67:             ret = gpio_port_write_logic(PORTC_INDEX, 0x02);
   497   001758  0E02               	movlw	2
   498   00175A  6E57               	movwf	gpio_port_write_logic@logic^0,c
   499   00175C  0E02               	movlw	2
   500   00175E  ECBD  F00C         	call	_gpio_port_write_logic
   501   001762  6E5C               	movwf	_ret^0,c
   502   001764                     
   503                           ;application.c: 68:             ret = gpio_port_write_logic(PORTA_INDEX, ((uint8)(number
      +                          %10)));
   504   001764  C04B  F04F         	movff	_number,___awmod@dividend
   505   001768  6A50               	clrf	(___awmod@dividend+1)^0,c
   506   00176A  0E00               	movlw	0
   507   00176C  6E52               	movwf	(___awmod@divisor+1)^0,c
   508   00176E  0E0A               	movlw	10
   509   001770  6E51               	movwf	___awmod@divisor^0,c
   510   001772  EC35  F00B         	call	___awmod	;wreg free
   511   001776  504F               	movf	?___awmod^0,w,c
   512   001778  6E57               	movwf	gpio_port_write_logic@logic^0,c
   513   00177A  0E00               	movlw	0
   514   00177C  ECBD  F00C         	call	_gpio_port_write_logic
   515   001780  6E5C               	movwf	_ret^0,c
   516   001782                     
   517                           ;application.c: 69:             _delay((unsigned long)((10)*(8000000UL/4000.0)));
   518   001782  0E1A               	movlw	26
   519   001784  6E5B               	movwf	??_main^0,c
   520   001786  0EF8               	movlw	248
   521   001788                     u1797:
   522   001788  2EE8               	decfsz	wreg,f,c
   523   00178A  D7FE               	bra	u1797
   524   00178C  2E5B               	decfsz	??_main^0,f,c
   525   00178E  D7FC               	bra	u1797
   526   001790  D000               	nop2	
   527   001792                     
   528                           ;application.c: 70:             if(number == 21){
   529   001792  0E15               	movlw	21
   530   001794  184B               	xorwf	_number^0,w,c
   531   001796  A4D8               	btfss	status,2,c
   532   001798  EFD0  F00B         	goto	u1701
   533   00179C  EFD2  F00B         	goto	u1700
   534   0017A0                     u1701:
   535   0017A0  EF8F  F00B         	goto	l31
   536   0017A4                     u1700:
   537   0017A4                     
   538                           ;application.c: 71:                 number = 0;
   539   0017A4  0E00               	movlw	0
   540   0017A6  6E4B               	movwf	_number^0,c
   541                           
   542                           ;application.c: 72:             }
   543   0017A8  EF8F  F00B         	goto	l31
   544   0017AC  EF07  F000         	goto	start
   545   0017B0                     __end_of_main:
   546                           	callstack 0
   547                           
   548 ;; *************** function _init *****************
   549 ;; Defined at:
   550 ;;		line 79 in file "application.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 5
   571 ;; This function calls:
   572 ;;		_Timer0_Init
   573 ;;		_gpio_pin_direction_init
   574 ;;		_seven_segment_init
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text1
   581   001A1C                     __ptext1:
   582                           	callstack 0
   583   001A1C                     _init:
   584                           	callstack 25
   585   001A1C                     
   586                           ;application.c: 80:     ret = seven_segment_init(&seven_seg_obj);
   587   001A1C  0E2A               	movlw	low _seven_seg_obj
   588   001A1E  6E57               	movwf	seven_segment_init@seg^0,c
   589   001A20  ECD9  F00A         	call	_seven_segment_init	;wreg free
   590   001A24  6E5C               	movwf	_ret^0,c
   591   001A26                     
   592                           ;application.c: 81:     ret = Timer0_Init(&timer0_obj);
   593   001A26  0E23               	movlw	low _timer0_obj
   594   001A28  6E51               	movwf	Timer0_Init@timer^0,c
   595   001A2A  ECD8  F00B         	call	_Timer0_Init	;wreg free
   596   001A2E  6E5C               	movwf	_ret^0,c
   597   001A30                     
   598                           ;application.c: 82:     ret = gpio_pin_direction_init(&ones);
   599   001A30  0E30               	movlw	low _ones
   600   001A32  6E4F               	movwf	gpio_pin_direction_init@_pin_config^0,c
   601   001A34  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   602   001A38  6E5C               	movwf	_ret^0,c
   603   001A3A                     
   604                           ;application.c: 83:     ret = gpio_pin_direction_init(&tens);
   605   001A3A  0E2F               	movlw	low _tens
   606   001A3C  6E4F               	movwf	gpio_pin_direction_init@_pin_config^0,c
   607   001A3E  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   608   001A42  6E5C               	movwf	_ret^0,c
   609   001A44  0012               	return		;funcret
   610   001A46                     __end_of_init:
   611                           	callstack 0
   612                           
   613 ;; *************** function _seven_segment_init *****************
   614 ;; Defined at:
   615 ;;		line 13 in file "ECU_layer/SEVEN_SEG/ecu_seven_seg.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  seg             1   11[COMRAM] PTR const struct .
   618 ;;		 -> seven_seg_obj(5), 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  ret             1   12[COMRAM] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      unsigned char 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   630 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 4
   637 ;; This function calls:
   638 ;;		_gpio_pin_direction_init
   639 ;;		_gpio_pin_write_logic
   640 ;; This function is called by:
   641 ;;		_init
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text2
   646   0015B2                     __ptext2:
   647                           	callstack 0
   648   0015B2                     _seven_segment_init:
   649                           	callstack 25
   650   0015B2                     
   651                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 15: if(((void*)0) == seg){
   652   0015B2  5057               	movf	seven_segment_init@seg^0,w,c
   653   0015B4  A4D8               	btfss	status,2,c
   654   0015B6  EFDF  F00A         	goto	u1551
   655   0015BA  EFE1  F00A         	goto	u1550
   656   0015BE                     u1551:
   657   0015BE  EFE5  F00A         	goto	l2180
   658   0015C2                     u1550:
   659   0015C2                     
   660                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 16:     ret = (Std_ReturnType)0x00;
   661   0015C2  0E00               	movlw	0
   662   0015C4  6E58               	movwf	seven_segment_init@ret^0,c
   663                           
   664                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 17: }
   665   0015C6  EF33  F00B         	goto	l2182
   666   0015CA                     l2180:
   667                           
   668                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 19:     ret = gpio_pin_direction_init(&(seg->segme
      +                          nt_pin[0]));
   669   0015CA  C057  F04F         	movff	seven_segment_init@seg,gpio_pin_direction_init@_pin_config
   670   0015CE  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   671   0015D2  6E58               	movwf	seven_segment_init@ret^0,c
   672                           
   673                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 20:     ret = gpio_pin_write_logic(&(seg->segment_
      +                          pin[0]), seg->segment_pin[0].logic);
   674   0015D4  C057  F04F         	movff	seven_segment_init@seg,gpio_pin_write_logic@_pin_config
   675   0015D8  5057               	movf	seven_segment_init@seg^0,w,c
   676   0015DA  6ED9               	movwf	fsr2l,c
   677   0015DC  6ADA               	clrf	fsr2h,c
   678   0015DE  0E00               	movlw	0
   679   0015E0  BEDF               	btfsc	indf2,7,c
   680   0015E2  0E01               	movlw	1
   681   0015E4  6E50               	movwf	gpio_pin_write_logic@logic^0,c
   682   0015E6  ECEF  F009         	call	_gpio_pin_write_logic	;wreg free
   683   0015EA  6E58               	movwf	seven_segment_init@ret^0,c
   684                           
   685                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 21:     ret = gpio_pin_direction_init(&(seg->segme
      +                          nt_pin[1]));
   686   0015EC  2857               	incf	seven_segment_init@seg^0,w,c
   687   0015EE  6E4F               	movwf	gpio_pin_direction_init@_pin_config^0,c
   688   0015F0  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   689   0015F4  6E58               	movwf	seven_segment_init@ret^0,c
   690                           
   691                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 22:     ret = gpio_pin_write_logic(&(seg->segment_
      +                          pin[1]), seg->segment_pin[1].logic);
   692   0015F6  2857               	incf	seven_segment_init@seg^0,w,c
   693   0015F8  6E4F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   694   0015FA  5057               	movf	seven_segment_init@seg^0,w,c
   695   0015FC  6ED9               	movwf	fsr2l,c
   696   0015FE  6ADA               	clrf	fsr2h,c
   697   001600  0E01               	movlw	1
   698   001602  26D9               	addwf	fsr2l,f,c
   699   001604  0E00               	movlw	0
   700   001606  BEDF               	btfsc	indf2,7,c
   701   001608  0E01               	movlw	1
   702   00160A  6E50               	movwf	gpio_pin_write_logic@logic^0,c
   703   00160C  ECEF  F009         	call	_gpio_pin_write_logic	;wreg free
   704   001610  6E58               	movwf	seven_segment_init@ret^0,c
   705                           
   706                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 23:     ret = gpio_pin_direction_init(&(seg->segme
      +                          nt_pin[2]));
   707   001612  5057               	movf	seven_segment_init@seg^0,w,c
   708   001614  0F02               	addlw	2
   709   001616  6E4F               	movwf	gpio_pin_direction_init@_pin_config^0,c
   710   001618  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   711   00161C  6E58               	movwf	seven_segment_init@ret^0,c
   712                           
   713                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 24:     ret = gpio_pin_write_logic(&(seg->segment_
      +                          pin[2]), seg->segment_pin[2].logic);
   714   00161E  5057               	movf	seven_segment_init@seg^0,w,c
   715   001620  0F02               	addlw	2
   716   001622  6E4F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   717   001624  5057               	movf	seven_segment_init@seg^0,w,c
   718   001626  6ED9               	movwf	fsr2l,c
   719   001628  6ADA               	clrf	fsr2h,c
   720   00162A  0E02               	movlw	2
   721   00162C  26D9               	addwf	fsr2l,f,c
   722   00162E  0E00               	movlw	0
   723   001630  BEDF               	btfsc	indf2,7,c
   724   001632  0E01               	movlw	1
   725   001634  6E50               	movwf	gpio_pin_write_logic@logic^0,c
   726   001636  ECEF  F009         	call	_gpio_pin_write_logic	;wreg free
   727   00163A  6E58               	movwf	seven_segment_init@ret^0,c
   728                           
   729                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 25:     ret = gpio_pin_direction_init(&(seg->segme
      +                          nt_pin[3]));
   730   00163C  5057               	movf	seven_segment_init@seg^0,w,c
   731   00163E  0F03               	addlw	3
   732   001640  6E4F               	movwf	gpio_pin_direction_init@_pin_config^0,c
   733   001642  EC5C  F009         	call	_gpio_pin_direction_init	;wreg free
   734   001646  6E58               	movwf	seven_segment_init@ret^0,c
   735                           
   736                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 26:     ret = gpio_pin_write_logic(&(seg->segment_
      +                          pin[3]), seg->segment_pin[3].logic);
   737   001648  5057               	movf	seven_segment_init@seg^0,w,c
   738   00164A  0F03               	addlw	3
   739   00164C  6E4F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   740   00164E  5057               	movf	seven_segment_init@seg^0,w,c
   741   001650  6ED9               	movwf	fsr2l,c
   742   001652  6ADA               	clrf	fsr2h,c
   743   001654  0E03               	movlw	3
   744   001656  26D9               	addwf	fsr2l,f,c
   745   001658  0E00               	movlw	0
   746   00165A  BEDF               	btfsc	indf2,7,c
   747   00165C  0E01               	movlw	1
   748   00165E  6E50               	movwf	gpio_pin_write_logic@logic^0,c
   749   001660  ECEF  F009         	call	_gpio_pin_write_logic	;wreg free
   750   001664  6E58               	movwf	seven_segment_init@ret^0,c
   751   001666                     l2182:
   752                           
   753                           ;ECU_layer/SEVEN_SEG/ecu_seven_seg.c: 29: return ret;
   754   001666  5058               	movf	seven_segment_init@ret^0,w,c
   755   001668  0012               	return		;funcret
   756   00166A                     __end_of_seven_segment_init:
   757                           	callstack 0
   758                           
   759 ;; *************** function _gpio_pin_write_logic *****************
   760 ;; Defined at:
   761 ;;		line 81 in file "MCAL_layer/GPIO/hal_gpio.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  _pin_config     1    3[COMRAM] PTR const struct .
   764 ;;		 -> seven_seg_obj$segment_pin(4), seven_seg_obj(5), 
   765 ;;  logic           1    4[COMRAM] enum E2978
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  ret             1   10[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      unsigned char 
   770 ;; Registers used:
   771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        8 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 3
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_seven_segment_init
   788 ;;		_seven_segment_write_number
   789 ;;		_gpio_pin_intialize
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text3
   794   0013DE                     __ptext3:
   795                           	callstack 0
   796   0013DE                     _gpio_pin_write_logic:
   797                           	callstack 25
   798   0013DE                     
   799                           ;MCAL_layer/GPIO/hal_gpio.c: 82: Std_ReturnType ret = (Std_ReturnType)0x01;
   800   0013DE  0E01               	movlw	1
   801   0013E0  6E56               	movwf	gpio_pin_write_logic@ret^0,c
   802                           
   803                           ;MCAL_layer/GPIO/hal_gpio.c: 83:  if((((void*)0) == _pin_config) || (_pin_config->pin > 
      +                          8 -1)){
   804   0013E2  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   805   0013E4  B4D8               	btfsc	status,2,c
   806   0013E6  EFF7  F009         	goto	u1431
   807   0013EA  EFF9  F009         	goto	u1430
   808   0013EE                     u1431:
   809   0013EE  EF09  F00A         	goto	l2124
   810   0013F2                     u1430:
   811   0013F2  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   812   0013F4  6ED9               	movwf	fsr2l,c
   813   0013F6  6ADA               	clrf	fsr2h,c
   814   0013F8  30DF               	rrcf	223,w,c
   815   0013FA  32E8               	rrcf	wreg,f,c
   816   0013FC  32E8               	rrcf	wreg,f,c
   817   0013FE  0B07               	andlw	7
   818   001400  6E51               	movwf	??_gpio_pin_write_logic^0,c
   819   001402  0E07               	movlw	7
   820   001404  6451               	cpfsgt	??_gpio_pin_write_logic^0,c
   821   001406  EF07  F00A         	goto	u1441
   822   00140A  EF09  F00A         	goto	u1440
   823   00140E                     u1441:
   824   00140E  EF60  F00A         	goto	l2132
   825   001412                     u1440:
   826   001412                     l2124:
   827                           
   828                           ;MCAL_layer/GPIO/hal_gpio.c: 84:      ret = (Std_ReturnType)0x00;
   829   001412  0E00               	movlw	0
   830   001414  6E56               	movwf	gpio_pin_write_logic@ret^0,c
   831                           
   832                           ;MCAL_layer/GPIO/hal_gpio.c: 86:  }
   833   001416  EF75  F00A         	goto	l2134
   834   00141A                     l2126:
   835                           
   836                           ;MCAL_layer/GPIO/hal_gpio.c: 90:              (*lat_reg[_pin_config->port] &= ~((uint8)1
      +                           << _pin_config->pin));
   837   00141A  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   838   00141C  6ED9               	movwf	fsr2l,c
   839   00141E  6ADA               	clrf	fsr2h,c
   840   001420  30DF               	rrcf	223,w,c
   841   001422  32E8               	rrcf	wreg,f,c
   842   001424  32E8               	rrcf	wreg,f,c
   843   001426  0B07               	andlw	7
   844   001428  6E51               	movwf	??_gpio_pin_write_logic^0,c
   845   00142A  0E01               	movlw	1
   846   00142C  6E52               	movwf	(??_gpio_pin_write_logic+1)^0,c
   847   00142E  2A51               	incf	??_gpio_pin_write_logic^0,f,c
   848   001430  EF1C  F00A         	goto	u1454
   849   001434                     u1455:
   850   001434  90D8               	bcf	status,0,c
   851   001436  3652               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   852   001438                     u1454:
   853   001438  2E51               	decfsz	??_gpio_pin_write_logic^0,f,c
   854   00143A  EF1A  F00A         	goto	u1455
   855   00143E  5052               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   856   001440  0AFF               	xorlw	255
   857   001442  6E53               	movwf	(??_gpio_pin_write_logic+2)^0,c
   858   001444  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   859   001446  6ED9               	movwf	fsr2l,c
   860   001448  6ADA               	clrf	fsr2h,c
   861   00144A  50DF               	movf	223,w,c
   862   00144C  0B07               	andlw	7
   863   00144E  0D02               	mullw	2
   864   001450  50F3               	movf	243,w,c
   865   001452  0F0B               	addlw	low _lat_reg
   866   001454  6ED9               	movwf	fsr2l,c
   867   001456  6ADA               	clrf	fsr2h,c
   868   001458  CFDE F054          	movff	postinc2,??_gpio_pin_write_logic+3
   869   00145C  CFDD F055          	movff	postdec2,??_gpio_pin_write_logic+4
   870   001460  C054  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   871   001464  C055  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   872   001468  5053               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   873   00146A  16DF               	andwf	indf2,f,c
   874                           
   875                           ;MCAL_layer/GPIO/hal_gpio.c: 91:              break;
   876   00146C  EF75  F00A         	goto	l2134
   877   001470                     l2128:
   878                           
   879                           ;MCAL_layer/GPIO/hal_gpio.c: 93:               (*lat_reg[_pin_config->port] |= ((uint8)1
      +                           << _pin_config->pin));
   880   001470  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   881   001472  6ED9               	movwf	fsr2l,c
   882   001474  6ADA               	clrf	fsr2h,c
   883   001476  30DF               	rrcf	223,w,c
   884   001478  32E8               	rrcf	wreg,f,c
   885   00147A  32E8               	rrcf	wreg,f,c
   886   00147C  0B07               	andlw	7
   887   00147E  6E51               	movwf	??_gpio_pin_write_logic^0,c
   888   001480  0E01               	movlw	1
   889   001482  6E52               	movwf	(??_gpio_pin_write_logic+1)^0,c
   890   001484  2A51               	incf	??_gpio_pin_write_logic^0,f,c
   891   001486  EF47  F00A         	goto	u1464
   892   00148A                     u1465:
   893   00148A  90D8               	bcf	status,0,c
   894   00148C  3652               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   895   00148E                     u1464:
   896   00148E  2E51               	decfsz	??_gpio_pin_write_logic^0,f,c
   897   001490  EF45  F00A         	goto	u1465
   898   001494  504F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   899   001496  6ED9               	movwf	fsr2l,c
   900   001498  6ADA               	clrf	fsr2h,c
   901   00149A  50DF               	movf	223,w,c
   902   00149C  0B07               	andlw	7
   903   00149E  0D02               	mullw	2
   904   0014A0  50F3               	movf	243,w,c
   905   0014A2  0F0B               	addlw	low _lat_reg
   906   0014A4  6ED9               	movwf	fsr2l,c
   907   0014A6  6ADA               	clrf	fsr2h,c
   908   0014A8  CFDE F053          	movff	postinc2,??_gpio_pin_write_logic+2
   909   0014AC  CFDD F054          	movff	postdec2,??_gpio_pin_write_logic+3
   910   0014B0  C053  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   911   0014B4  C054  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   912   0014B8  5052               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   913   0014BA  12DF               	iorwf	indf2,f,c
   914                           
   915                           ;MCAL_layer/GPIO/hal_gpio.c: 94:              break;
   916   0014BC  EF75  F00A         	goto	l2134
   917   0014C0                     l2132:
   918   0014C0  5050               	movf	gpio_pin_write_logic@logic^0,w,c
   919   0014C2  6E51               	movwf	??_gpio_pin_write_logic^0,c
   920   0014C4  6A52               	clrf	(??_gpio_pin_write_logic+1)^0,c
   921                           
   922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 1, Range of values is 0 to 0
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte            4     3 (average)
   928                           ;	Chosen strategy is simple_byte
   929   0014C6  5052               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   930   0014C8  0A00               	xorlw	0	; case 0
   931   0014CA  B4D8               	btfsc	status,2,c
   932   0014CC  EF6A  F00A         	goto	l2424
   933   0014D0  EF09  F00A         	goto	l2124
   934   0014D4                     l2424:
   935                           
   936                           ; Switch size 1, requested type "simple"
   937                           ; Number of cases is 2, Range of values is 0 to 1
   938                           ; switch strategies available:
   939                           ; Name         Instructions Cycles
   940                           ; simple_byte            7     4 (average)
   941                           ;	Chosen strategy is simple_byte
   942   0014D4  5051               	movf	??_gpio_pin_write_logic^0,w,c
   943   0014D6  0A00               	xorlw	0	; case 0
   944   0014D8  B4D8               	btfsc	status,2,c
   945   0014DA  EF0D  F00A         	goto	l2126
   946   0014DE  0A01               	xorlw	1	; case 1
   947   0014E0  B4D8               	btfsc	status,2,c
   948   0014E2  EF38  F00A         	goto	l2128
   949   0014E6  EF09  F00A         	goto	l2124
   950   0014EA                     l2134:
   951                           
   952                           ;MCAL_layer/GPIO/hal_gpio.c: 102: return ret;
   953   0014EA  5056               	movf	gpio_pin_write_logic@ret^0,w,c
   954   0014EC  0012               	return		;funcret
   955   0014EE                     __end_of_gpio_pin_write_logic:
   956                           	callstack 0
   957                           
   958 ;; *************** function _gpio_pin_direction_init *****************
   959 ;; Defined at:
   960 ;;		line 30 in file "MCAL_layer/GPIO/hal_gpio.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  _pin_config     1    3[COMRAM] PTR const struct .
   963 ;;		 -> tens(1), ones(1), seven_seg_obj$segment_pin(4), seven_seg_obj(5), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  ret             1    9[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      unsigned char 
   968 ;; Registers used:
   969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   975 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;Total ram usage:        7 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 3
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_init
   986 ;;		_seven_segment_init
   987 ;;		_gpio_pin_intialize
   988 ;;		_Interrupt_RBx_Init
   989 ;;		_Interrupt_INTx_Pin_Init
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994   0012B8                     __ptext4:
   995                           	callstack 0
   996   0012B8                     _gpio_pin_direction_init:
   997                           	callstack 25
   998   0012B8                     
   999                           ;MCAL_layer/GPIO/hal_gpio.c: 31:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1000   0012B8  0E01               	movlw	1
  1001   0012BA  6E55               	movwf	gpio_pin_direction_init@ret^0,c
  1002                           
  1003                           ;MCAL_layer/GPIO/hal_gpio.c: 33:     if((((void*)0) == _pin_config) || (_pin_config->pin
      +                           > 8 -1)){
  1004   0012BC  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1005   0012BE  B4D8               	btfsc	status,2,c
  1006   0012C0  EF64  F009         	goto	u1371
  1007   0012C4  EF66  F009         	goto	u1370
  1008   0012C8                     u1371:
  1009   0012C8  EF76  F009         	goto	l2102
  1010   0012CC                     u1370:
  1011   0012CC  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1012   0012CE  6ED9               	movwf	fsr2l,c
  1013   0012D0  6ADA               	clrf	fsr2h,c
  1014   0012D2  30DF               	rrcf	223,w,c
  1015   0012D4  32E8               	rrcf	wreg,f,c
  1016   0012D6  32E8               	rrcf	wreg,f,c
  1017   0012D8  0B07               	andlw	7
  1018   0012DA  6E50               	movwf	??_gpio_pin_direction_init^0,c
  1019   0012DC  0E07               	movlw	7
  1020   0012DE  6450               	cpfsgt	??_gpio_pin_direction_init^0,c
  1021   0012E0  EF74  F009         	goto	u1381
  1022   0012E4  EF76  F009         	goto	u1380
  1023   0012E8                     u1381:
  1024   0012E8  EFCD  F009         	goto	l2110
  1025   0012EC                     u1380:
  1026   0012EC                     l2102:
  1027                           
  1028                           ;MCAL_layer/GPIO/hal_gpio.c: 34:     ret = (Std_ReturnType)0x00;
  1029   0012EC  0E00               	movlw	0
  1030   0012EE  6E55               	movwf	gpio_pin_direction_init@ret^0,c
  1031                           
  1032                           ;MCAL_layer/GPIO/hal_gpio.c: 36:     }
  1033   0012F0  EFED  F009         	goto	l2112
  1034   0012F4                     l2104:
  1035                           
  1036                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             (*tris_reg[_pin_config->port] &= ~((uint8)1
      +                           << _pin_config->pin));
  1037   0012F4  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1038   0012F6  6ED9               	movwf	fsr2l,c
  1039   0012F8  6ADA               	clrf	fsr2h,c
  1040   0012FA  30DF               	rrcf	223,w,c
  1041   0012FC  32E8               	rrcf	wreg,f,c
  1042   0012FE  32E8               	rrcf	wreg,f,c
  1043   001300  0B07               	andlw	7
  1044   001302  6E50               	movwf	??_gpio_pin_direction_init^0,c
  1045   001304  0E01               	movlw	1
  1046   001306  6E51               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1047   001308  2A50               	incf	??_gpio_pin_direction_init^0,f,c
  1048   00130A  EF89  F009         	goto	u1394
  1049   00130E                     u1395:
  1050   00130E  90D8               	bcf	status,0,c
  1051   001310  3651               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1052   001312                     u1394:
  1053   001312  2E50               	decfsz	??_gpio_pin_direction_init^0,f,c
  1054   001314  EF87  F009         	goto	u1395
  1055   001318  5051               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1056   00131A  0AFF               	xorlw	255
  1057   00131C  6E52               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1058   00131E  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1059   001320  6ED9               	movwf	fsr2l,c
  1060   001322  6ADA               	clrf	fsr2h,c
  1061   001324  50DF               	movf	223,w,c
  1062   001326  0B07               	andlw	7
  1063   001328  0D02               	mullw	2
  1064   00132A  50F3               	movf	243,w,c
  1065   00132C  0F15               	addlw	low _tris_reg
  1066   00132E  6ED9               	movwf	fsr2l,c
  1067   001330  6ADA               	clrf	fsr2h,c
  1068   001332  CFDE F053          	movff	postinc2,??_gpio_pin_direction_init+3
  1069   001336  CFDD F054          	movff	postdec2,??_gpio_pin_direction_init+4
  1070   00133A  C053  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1071   00133E  C054  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1072   001342  5052               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1073   001344  16DF               	andwf	indf2,f,c
  1074                           
  1075                           ;MCAL_layer/GPIO/hal_gpio.c: 41:         break;
  1076   001346  EFED  F009         	goto	l2112
  1077   00134A                     l2106:
  1078                           
  1079                           ;MCAL_layer/GPIO/hal_gpio.c: 43:             (*tris_reg[_pin_config->port] |= ((uint8)1 
      +                          << _pin_config->pin));
  1080   00134A  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1081   00134C  6ED9               	movwf	fsr2l,c
  1082   00134E  6ADA               	clrf	fsr2h,c
  1083   001350  30DF               	rrcf	223,w,c
  1084   001352  32E8               	rrcf	wreg,f,c
  1085   001354  32E8               	rrcf	wreg,f,c
  1086   001356  0B07               	andlw	7
  1087   001358  6E50               	movwf	??_gpio_pin_direction_init^0,c
  1088   00135A  0E01               	movlw	1
  1089   00135C  6E51               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1090   00135E  2A50               	incf	??_gpio_pin_direction_init^0,f,c
  1091   001360  EFB4  F009         	goto	u1404
  1092   001364                     u1405:
  1093   001364  90D8               	bcf	status,0,c
  1094   001366  3651               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1095   001368                     u1404:
  1096   001368  2E50               	decfsz	??_gpio_pin_direction_init^0,f,c
  1097   00136A  EFB2  F009         	goto	u1405
  1098   00136E  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1099   001370  6ED9               	movwf	fsr2l,c
  1100   001372  6ADA               	clrf	fsr2h,c
  1101   001374  50DF               	movf	223,w,c
  1102   001376  0B07               	andlw	7
  1103   001378  0D02               	mullw	2
  1104   00137A  50F3               	movf	243,w,c
  1105   00137C  0F15               	addlw	low _tris_reg
  1106   00137E  6ED9               	movwf	fsr2l,c
  1107   001380  6ADA               	clrf	fsr2h,c
  1108   001382  CFDE F052          	movff	postinc2,??_gpio_pin_direction_init+2
  1109   001386  CFDD F053          	movff	postdec2,??_gpio_pin_direction_init+3
  1110   00138A  C052  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1111   00138E  C053  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1112   001392  5051               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1113   001394  12DF               	iorwf	indf2,f,c
  1114                           
  1115                           ;MCAL_layer/GPIO/hal_gpio.c: 44:             break;
  1116   001396  EFED  F009         	goto	l2112
  1117   00139A                     l2110:
  1118   00139A  504F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  1119   00139C  6ED9               	movwf	fsr2l,c
  1120   00139E  6ADA               	clrf	fsr2h,c
  1121   0013A0  BCDF               	btfsc	indf2,6,c
  1122   0013A2  EFD5  F009         	goto	u1411
  1123   0013A6  EFD8  F009         	goto	u1410
  1124   0013AA                     u1411:
  1125   0013AA  0E01               	movlw	1
  1126   0013AC  EFD9  F009         	goto	u1420
  1127   0013B0                     u1410:
  1128   0013B0  0E00               	movlw	0
  1129   0013B2                     u1420:
  1130   0013B2  6E50               	movwf	??_gpio_pin_direction_init^0,c
  1131   0013B4  6A51               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1132                           
  1133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 1, Range of values is 0 to 0
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte            4     3 (average)
  1139                           ;	Chosen strategy is simple_byte
  1140   0013B6  5051               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1141   0013B8  0A00               	xorlw	0	; case 0
  1142   0013BA  B4D8               	btfsc	status,2,c
  1143   0013BC  EFE2  F009         	goto	l2426
  1144   0013C0  EF76  F009         	goto	l2102
  1145   0013C4                     l2426:
  1146                           
  1147                           ; Switch size 1, requested type "simple"
  1148                           ; Number of cases is 2, Range of values is 0 to 1
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; simple_byte            7     4 (average)
  1152                           ;	Chosen strategy is simple_byte
  1153   0013C4  5050               	movf	??_gpio_pin_direction_init^0,w,c
  1154   0013C6  0A00               	xorlw	0	; case 0
  1155   0013C8  B4D8               	btfsc	status,2,c
  1156   0013CA  EF7A  F009         	goto	l2104
  1157   0013CE  0A01               	xorlw	1	; case 1
  1158   0013D0  B4D8               	btfsc	status,2,c
  1159   0013D2  EFA5  F009         	goto	l2106
  1160   0013D6  EF76  F009         	goto	l2102
  1161   0013DA                     l2112:
  1162                           
  1163                           ;MCAL_layer/GPIO/hal_gpio.c: 50:     return ret;
  1164   0013DA  5055               	movf	gpio_pin_direction_init@ret^0,w,c
  1165   0013DC  0012               	return		;funcret
  1166   0013DE                     __end_of_gpio_pin_direction_init:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _Timer0_Init *****************
  1170 ;; Defined at:
  1171 ;;		line 23 in file "MCAL_layer/TIMER0/hal_timer0.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  timer           1    5[COMRAM] PTR const struct .
  1174 ;;		 -> timer0_obj(7), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  ret             1    8[COMRAM] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      unsigned char 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        4 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 4
  1193 ;; This function calls:
  1194 ;;		_Timer0_Mode_Select
  1195 ;;		_Timer0_Reg_Size
  1196 ;;		_Timer0_prescaler_config
  1197 ;; This function is called by:
  1198 ;;		_init
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text5
  1203   0017B0                     __ptext5:
  1204                           	callstack 0
  1205   0017B0                     _Timer0_Init:
  1206                           	callstack 25
  1207   0017B0                     
  1208                           ;MCAL_layer/TIMER0/hal_timer0.c: 24:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1209   0017B0  0E01               	movlw	1
  1210   0017B2  6E54               	movwf	Timer0_Init@ret^0,c
  1211                           
  1212                           ;MCAL_layer/TIMER0/hal_timer0.c: 25:     if(((void*)0) == timer){
  1213   0017B4  5051               	movf	Timer0_Init@timer^0,w,c
  1214   0017B6  A4D8               	btfss	status,2,c
  1215   0017B8  EFE0  F00B         	goto	u1561
  1216   0017BC  EFE2  F00B         	goto	u1560
  1217   0017C0                     u1561:
  1218   0017C0  EFE6  F00B         	goto	l502
  1219   0017C4                     u1560:
  1220   0017C4                     
  1221                           ;MCAL_layer/TIMER0/hal_timer0.c: 26:         ret = (Std_ReturnType)0x00;
  1222   0017C4  0E00               	movlw	0
  1223   0017C6  6E54               	movwf	Timer0_Init@ret^0,c
  1224                           
  1225                           ;MCAL_layer/TIMER0/hal_timer0.c: 27:     }
  1226   0017C8  EF1D  F00C         	goto	l2210
  1227   0017CC                     l502:
  1228                           
  1229                           ;MCAL_layer/TIMER0/hal_timer0.c: 29:         (T0CONbits.TMR0ON = 0);
  1230   0017CC  9ED5               	bcf	213,7,c	;volatile
  1231   0017CE                     
  1232                           ;MCAL_layer/TIMER0/hal_timer0.c: 30:         Timer0_prescaler_config(timer);
  1233   0017CE  C051  F04F         	movff	Timer0_Init@timer,Timer0_prescaler_config@timer
  1234   0017D2  EC5A  F00C         	call	_Timer0_prescaler_config	;wreg free
  1235                           
  1236                           ;MCAL_layer/TIMER0/hal_timer0.c: 31:         Timer0_Mode_Select(timer);
  1237   0017D6  C051  F04F         	movff	Timer0_Init@timer,Timer0_Mode_Select@timer
  1238   0017DA  EC1F  F00C         	call	_Timer0_Mode_Select	;wreg free
  1239                           
  1240                           ;MCAL_layer/TIMER0/hal_timer0.c: 32:         Timer0_Reg_Size(timer);
  1241   0017DE  C051  F04F         	movff	Timer0_Init@timer,Timer0_Reg_Size@timer
  1242   0017E2  ECA0  F00C         	call	_Timer0_Reg_Size	;wreg free
  1243   0017E6                     
  1244                           ;MCAL_layer/TIMER0/hal_timer0.c: 33:         TMR0H = ((timer->timer0_preload_val) >> 8);
  1245   0017E6  5051               	movf	Timer0_Init@timer^0,w,c
  1246   0017E8  6ED9               	movwf	fsr2l,c
  1247   0017EA  6ADA               	clrf	fsr2h,c
  1248   0017EC  0E04               	movlw	4
  1249   0017EE  26D9               	addwf	fsr2l,f,c
  1250   0017F0  CFDE F052          	movff	postinc2,??_Timer0_Init
  1251   0017F4  CFDD F053          	movff	postdec2,??_Timer0_Init+1
  1252   0017F8  C053  F052         	movff	??_Timer0_Init+1,??_Timer0_Init
  1253   0017FC  6A53               	clrf	(??_Timer0_Init+1)^0,c
  1254   0017FE  5052               	movf	??_Timer0_Init^0,w,c
  1255   001800  6ED7               	movwf	215,c	;volatile
  1256   001802                     
  1257                           ;MCAL_layer/TIMER0/hal_timer0.c: 34:         TMR0L = (uint8)(timer->timer0_preload_val);
  1258   001802  5051               	movf	Timer0_Init@timer^0,w,c
  1259   001804  6ED9               	movwf	fsr2l,c
  1260   001806  6ADA               	clrf	fsr2h,c
  1261   001808  0E04               	movlw	4
  1262   00180A  26D9               	addwf	fsr2l,f,c
  1263   00180C  50DF               	movf	indf2,w,c
  1264   00180E  6ED6               	movwf	214,c	;volatile
  1265   001810                     
  1266                           ;MCAL_layer/TIMER0/hal_timer0.c: 35:         timer0_preload = timer->timer0_preload_val;
  1267   001810  5051               	movf	Timer0_Init@timer^0,w,c
  1268   001812  6ED9               	movwf	fsr2l,c
  1269   001814  6ADA               	clrf	fsr2h,c
  1270   001816  0E04               	movlw	4
  1271   001818  26D9               	addwf	fsr2l,f,c
  1272   00181A  CFDE F031          	movff	postinc2,_timer0_preload
  1273   00181E  CFDD F032          	movff	postdec2,_timer0_preload+1
  1274   001822                     
  1275                           ;MCAL_layer/TIMER0/hal_timer0.c: 37:         (INTCONbits.TMR0IE = 1);
  1276   001822  8AF2               	bsf	242,5,c	;volatile
  1277   001824                     
  1278                           ;MCAL_layer/TIMER0/hal_timer0.c: 38:         (INTCONbits.TMR0IF = 0);
  1279   001824  94F2               	bcf	242,2,c	;volatile
  1280   001826                     
  1281                           ;MCAL_layer/TIMER0/hal_timer0.c: 39:         Timer0_InterruptHandler = timer->Timer0_Int
      +                          erruptHandler;
  1282   001826  5051               	movf	Timer0_Init@timer^0,w,c
  1283   001828  6ED9               	movwf	fsr2l,c
  1284   00182A  6ADA               	clrf	fsr2h,c
  1285   00182C  CFDE F033          	movff	postinc2,_Timer0_InterruptHandler
  1286   001830  CFDD F034          	movff	postdec2,_Timer0_InterruptHandler+1
  1287   001834                     
  1288                           ;MCAL_layer/TIMER0/hal_timer0.c: 52:         (INTCONbits.GIE = 1);
  1289   001834  8EF2               	bsf	242,7,c	;volatile
  1290   001836                     
  1291                           ;MCAL_layer/TIMER0/hal_timer0.c: 53:         (INTCONbits.PEIE = 1);
  1292   001836  8CF2               	bsf	242,6,c	;volatile
  1293   001838                     
  1294                           ;MCAL_layer/TIMER0/hal_timer0.c: 57:         (T0CONbits.TMR0ON = 1);
  1295   001838  8ED5               	bsf	213,7,c	;volatile
  1296   00183A                     l2210:
  1297                           
  1298                           ;MCAL_layer/TIMER0/hal_timer0.c: 59:     return ret;
  1299   00183A  5054               	movf	Timer0_Init@ret^0,w,c
  1300   00183C  0012               	return		;funcret
  1301   00183E                     __end_of_Timer0_Init:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _Timer0_prescaler_config *****************
  1305 ;; Defined at:
  1306 ;;		line 128 in file "MCAL_layer/TIMER0/hal_timer0.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  timer           1    3[COMRAM] PTR const struct .
  1309 ;;		 -> timer0_obj(7), 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 3
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_Timer0_Init
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text6
  1336   0018B4                     __ptext6:
  1337                           	callstack 0
  1338   0018B4                     _Timer0_prescaler_config:
  1339                           	callstack 25
  1340   0018B4                     
  1341                           ;MCAL_layer/TIMER0/hal_timer0.c: 129:     if(1 == timer->prescaler_enable){
  1342   0018B4  504F               	movf	Timer0_prescaler_config@timer^0,w,c
  1343   0018B6  6ED9               	movwf	fsr2l,c
  1344   0018B8  6ADA               	clrf	fsr2h,c
  1345   0018BA  0E06               	movlw	6
  1346   0018BC  26D9               	addwf	fsr2l,f,c
  1347   0018BE  A0DF               	btfss	indf2,0,c
  1348   0018C0  EF64  F00C         	goto	u1471
  1349   0018C4  EF66  F00C         	goto	u1470
  1350   0018C8                     u1471:
  1351   0018C8  EF75  F00C         	goto	l2148
  1352   0018CC                     u1470:
  1353   0018CC                     
  1354                           ;MCAL_layer/TIMER0/hal_timer0.c: 130:         (T0CONbits.PSA = 0);
  1355   0018CC  96D5               	bcf	213,3,c	;volatile
  1356   0018CE                     
  1357                           ;MCAL_layer/TIMER0/hal_timer0.c: 131:         T0CONbits.T0PS = timer->prescaler_val;
  1358   0018CE  504F               	movf	Timer0_prescaler_config@timer^0,w,c
  1359   0018D0  6ED9               	movwf	fsr2l,c
  1360   0018D2  6ADA               	clrf	fsr2h,c
  1361   0018D4  0E03               	movlw	3
  1362   0018D6  26D9               	addwf	fsr2l,f,c
  1363   0018D8  50DF               	movf	indf2,w,c
  1364   0018DA  6E50               	movwf	??_Timer0_prescaler_config^0,c
  1365   0018DC  50D5               	movf	213,w,c	;volatile
  1366   0018DE  1850               	xorwf	??_Timer0_prescaler_config^0,w,c
  1367   0018E0  0BF8               	andlw	-8
  1368   0018E2  1850               	xorwf	??_Timer0_prescaler_config^0,w,c
  1369   0018E4  6ED5               	movwf	213,c	;volatile
  1370                           
  1371                           ;MCAL_layer/TIMER0/hal_timer0.c: 132:     }
  1372   0018E6  EF82  F00C         	goto	l532
  1373   0018EA                     l2148:
  1374   0018EA  504F               	movf	Timer0_prescaler_config@timer^0,w,c
  1375   0018EC  6ED9               	movwf	fsr2l,c
  1376   0018EE  6ADA               	clrf	fsr2h,c
  1377   0018F0  0E06               	movlw	6
  1378   0018F2  26D9               	addwf	fsr2l,f,c
  1379   0018F4  B0DF               	btfsc	indf2,0,c
  1380   0018F6  EF7F  F00C         	goto	u1481
  1381   0018FA  EF81  F00C         	goto	u1480
  1382   0018FE                     u1481:
  1383   0018FE  EF82  F00C         	goto	l532
  1384   001902                     u1480:
  1385   001902                     
  1386                           ;MCAL_layer/TIMER0/hal_timer0.c: 134:         (T0CONbits.PSA = 1);
  1387   001902  86D5               	bsf	213,3,c	;volatile
  1388   001904                     l532:
  1389   001904  0012               	return		;funcret
  1390   001906                     __end_of_Timer0_prescaler_config:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _Timer0_Reg_Size *****************
  1394 ;; Defined at:
  1395 ;;		line 156 in file "MCAL_layer/TIMER0/hal_timer0.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  timer           1    3[COMRAM] PTR const struct .
  1398 ;;		 -> timer0_obj(7), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:        1 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 3
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_Timer0_Init
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text7
  1425   001940                     __ptext7:
  1426                           	callstack 0
  1427   001940                     _Timer0_Reg_Size:
  1428                           	callstack 25
  1429   001940                     
  1430                           ;MCAL_layer/TIMER0/hal_timer0.c: 157:     if(1 == timer->timer0_reg_size){
  1431   001940  504F               	movf	Timer0_Reg_Size@timer^0,w,c
  1432   001942  6ED9               	movwf	fsr2l,c
  1433   001944  6ADA               	clrf	fsr2h,c
  1434   001946  0E06               	movlw	6
  1435   001948  26D9               	addwf	fsr2l,f,c
  1436   00194A  A6DF               	btfss	indf2,3,c
  1437   00194C  EFAA  F00C         	goto	u1531
  1438   001950  EFAC  F00C         	goto	u1530
  1439   001954                     u1531:
  1440   001954  EFAF  F00C         	goto	l2172
  1441   001958                     u1530:
  1442   001958                     
  1443                           ;MCAL_layer/TIMER0/hal_timer0.c: 158:         (T0CONbits.T08BIT = 1);
  1444   001958  8CD5               	bsf	213,6,c	;volatile
  1445                           
  1446                           ;MCAL_layer/TIMER0/hal_timer0.c: 159:     }
  1447   00195A  EFBC  F00C         	goto	l550
  1448   00195E                     l2172:
  1449   00195E  504F               	movf	Timer0_Reg_Size@timer^0,w,c
  1450   001960  6ED9               	movwf	fsr2l,c
  1451   001962  6ADA               	clrf	fsr2h,c
  1452   001964  0E06               	movlw	6
  1453   001966  26D9               	addwf	fsr2l,f,c
  1454   001968  B6DF               	btfsc	indf2,3,c
  1455   00196A  EFB9  F00C         	goto	u1541
  1456   00196E  EFBB  F00C         	goto	u1540
  1457   001972                     u1541:
  1458   001972  EFBC  F00C         	goto	l550
  1459   001976                     u1540:
  1460   001976                     
  1461                           ;MCAL_layer/TIMER0/hal_timer0.c: 161:         (T0CONbits.T08BIT = 0);
  1462   001976  9CD5               	bcf	213,6,c	;volatile
  1463   001978                     l550:
  1464   001978  0012               	return		;funcret
  1465   00197A                     __end_of_Timer0_Reg_Size:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _Timer0_Mode_Select *****************
  1469 ;; Defined at:
  1470 ;;		line 139 in file "MCAL_layer/TIMER0/hal_timer0.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  timer           1    3[COMRAM] PTR const struct .
  1473 ;;		 -> timer0_obj(7), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 3
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_Timer0_Init
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text8
  1500   00183E                     __ptext8:
  1501                           	callstack 0
  1502   00183E                     _Timer0_Mode_Select:
  1503                           	callstack 25
  1504   00183E                     
  1505                           ;MCAL_layer/TIMER0/hal_timer0.c: 140:     if(1 == timer->timer0_mode){
  1506   00183E  504F               	movf	Timer0_Mode_Select@timer^0,w,c
  1507   001840  6ED9               	movwf	fsr2l,c
  1508   001842  6ADA               	clrf	fsr2h,c
  1509   001844  0E06               	movlw	6
  1510   001846  26D9               	addwf	fsr2l,f,c
  1511   001848  A4DF               	btfss	indf2,2,c
  1512   00184A  EF29  F00C         	goto	u1491
  1513   00184E  EF2B  F00C         	goto	u1490
  1514   001852                     u1491:
  1515   001852  EF2E  F00C         	goto	l2156
  1516   001856                     u1490:
  1517   001856                     
  1518                           ;MCAL_layer/TIMER0/hal_timer0.c: 141:         (T0CONbits.T0CS = 0);
  1519   001856  9AD5               	bcf	213,5,c	;volatile
  1520                           
  1521                           ;MCAL_layer/TIMER0/hal_timer0.c: 142:     }
  1522   001858  EF59  F00C         	goto	l543
  1523   00185C                     l2156:
  1524   00185C  504F               	movf	Timer0_Mode_Select@timer^0,w,c
  1525   00185E  6ED9               	movwf	fsr2l,c
  1526   001860  6ADA               	clrf	fsr2h,c
  1527   001862  0E06               	movlw	6
  1528   001864  26D9               	addwf	fsr2l,f,c
  1529   001866  B4DF               	btfsc	indf2,2,c
  1530   001868  EF38  F00C         	goto	u1501
  1531   00186C  EF3A  F00C         	goto	u1500
  1532   001870                     u1501:
  1533   001870  EF59  F00C         	goto	l543
  1534   001874                     u1500:
  1535   001874                     
  1536                           ;MCAL_layer/TIMER0/hal_timer0.c: 144:         (T0CONbits.T0CS = 1);
  1537   001874  8AD5               	bsf	213,5,c	;volatile
  1538   001876                     
  1539                           ;MCAL_layer/TIMER0/hal_timer0.c: 145:         if(1 == timer->timer0_edge){
  1540   001876  504F               	movf	Timer0_Mode_Select@timer^0,w,c
  1541   001878  6ED9               	movwf	fsr2l,c
  1542   00187A  6ADA               	clrf	fsr2h,c
  1543   00187C  0E06               	movlw	6
  1544   00187E  26D9               	addwf	fsr2l,f,c
  1545   001880  A2DF               	btfss	indf2,1,c
  1546   001882  EF45  F00C         	goto	u1511
  1547   001886  EF47  F00C         	goto	u1510
  1548   00188A                     u1511:
  1549   00188A  EF4A  F00C         	goto	l2164
  1550   00188E                     u1510:
  1551   00188E                     
  1552                           ;MCAL_layer/TIMER0/hal_timer0.c: 146:             (T0CONbits.T0SE = 0);
  1553   00188E  98D5               	bcf	213,4,c	;volatile
  1554                           
  1555                           ;MCAL_layer/TIMER0/hal_timer0.c: 147:         }
  1556   001890  EF59  F00C         	goto	l543
  1557   001894                     l2164:
  1558   001894  504F               	movf	Timer0_Mode_Select@timer^0,w,c
  1559   001896  6ED9               	movwf	fsr2l,c
  1560   001898  6ADA               	clrf	fsr2h,c
  1561   00189A  0E06               	movlw	6
  1562   00189C  26D9               	addwf	fsr2l,f,c
  1563   00189E  B2DF               	btfsc	indf2,1,c
  1564   0018A0  EF54  F00C         	goto	u1521
  1565   0018A4  EF56  F00C         	goto	u1520
  1566   0018A8                     u1521:
  1567   0018A8  EF59  F00C         	goto	l542
  1568   0018AC                     u1520:
  1569   0018AC                     
  1570                           ;MCAL_layer/TIMER0/hal_timer0.c: 149:             (T0CONbits.T0SE = 1);
  1571   0018AC  88D5               	bsf	213,4,c	;volatile
  1572                           
  1573                           ;MCAL_layer/TIMER0/hal_timer0.c: 150:         }
  1574   0018AE  EF59  F00C         	goto	l543
  1575   0018B2                     l542:
  1576   0018B2                     l543:
  1577   0018B2  0012               	return		;funcret
  1578   0018B4                     __end_of_Timer0_Mode_Select:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _gpio_port_write_logic *****************
  1582 ;; Defined at:
  1583 ;;		line 190 in file "MCAL_layer/GPIO/hal_gpio.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  port            1    wreg     enum E2996
  1586 ;;  logic           1   11[COMRAM] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  port            1   14[COMRAM] enum E2996
  1589 ;;  ret             1    0        unsigned char 
  1590 ;;  ret             1    0        unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      unsigned char 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1600 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;Total ram usage:        4 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 3
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text9
  1615   00197A                     __ptext9:
  1616                           	callstack 0
  1617   00197A                     _gpio_port_write_logic:
  1618                           	callstack 27
  1619                           
  1620                           ;incstack = 0
  1621                           ;gpio_port_write_logic@port stored from wreg
  1622   00197A  6E5A               	movwf	gpio_port_write_logic@port^0,c
  1623   00197C                     
  1624                           ;MCAL_layer/GPIO/hal_gpio.c: 192: if(port > 5 -1){
  1625   00197C  0E04               	movlw	4
  1626   00197E  645A               	cpfsgt	gpio_port_write_logic@port^0,c
  1627   001980  EFC4  F00C         	goto	u1571
  1628   001984  EFC6  F00C         	goto	u1570
  1629   001988                     u1571:
  1630   001988  EFC8  F00C         	goto	l2228
  1631   00198C                     u1570:
  1632   00198C                     
  1633                           ;MCAL_layer/GPIO/hal_gpio.c: 194: }
  1634   00198C  EFD8  F00C         	goto	l2230
  1635   001990                     l2228:
  1636                           
  1637                           ;MCAL_layer/GPIO/hal_gpio.c: 196:       *lat_reg[port] = logic;
  1638   001990  505A               	movf	gpio_port_write_logic@port^0,w,c
  1639   001992  0D02               	mullw	2
  1640   001994  50F3               	movf	243,w,c
  1641   001996  0F0B               	addlw	low _lat_reg
  1642   001998  6ED9               	movwf	fsr2l,c
  1643   00199A  6ADA               	clrf	fsr2h,c
  1644   00199C  CFDE F058          	movff	postinc2,??_gpio_port_write_logic
  1645   0019A0  CFDD F059          	movff	postdec2,??_gpio_port_write_logic+1
  1646   0019A4  C058  FFD9         	movff	??_gpio_port_write_logic,fsr2l
  1647   0019A8  C059  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
  1648   0019AC  C057  FFDF         	movff	gpio_port_write_logic@logic,indf2
  1649   0019B0                     l2230:
  1650                           
  1651                           ;MCAL_layer/GPIO/hal_gpio.c: 198: return ret;
  1652   0019B0  0E01               	movlw	1
  1653   0019B2  0012               	return		;funcret
  1654   0019B4                     __end_of_gpio_port_write_logic:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function ___awmod *****************
  1658 ;; Defined at:
  1659 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  dividend        2    3[COMRAM] int 
  1662 ;;  divisor         2    5[COMRAM] int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  sign            1    8[COMRAM] unsigned char 
  1665 ;;  counter         1    7[COMRAM] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2    3[COMRAM] int 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;Total ram usage:        6 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 3
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text10
  1690   00166A                     __ptext10:
  1691                           	callstack 0
  1692   00166A                     ___awmod:
  1693                           	callstack 27
  1694   00166A  0E00               	movlw	0
  1695   00166C  6E54               	movwf	___awmod@sign^0,c
  1696   00166E  BE50               	btfsc	(___awmod@dividend+1)^0,7,c
  1697   001670  EF3E  F00B         	goto	u1640
  1698   001674  EF3C  F00B         	goto	u1641
  1699   001678                     u1641:
  1700   001678  EF44  F00B         	goto	l2286
  1701   00167C                     u1640:
  1702   00167C  6C4F               	negf	___awmod@dividend^0,c
  1703   00167E  1E50               	comf	(___awmod@dividend+1)^0,f,c
  1704   001680  B0D8               	btfsc	status,0,c
  1705   001682  2A50               	incf	(___awmod@dividend+1)^0,f,c
  1706   001684  0E01               	movlw	1
  1707   001686  6E54               	movwf	___awmod@sign^0,c
  1708   001688                     l2286:
  1709   001688  BE52               	btfsc	(___awmod@divisor+1)^0,7,c
  1710   00168A  EF4B  F00B         	goto	u1650
  1711   00168E  EF49  F00B         	goto	u1651
  1712   001692                     u1651:
  1713   001692  EF4F  F00B         	goto	l2290
  1714   001696                     u1650:
  1715   001696  6C51               	negf	___awmod@divisor^0,c
  1716   001698  1E52               	comf	(___awmod@divisor+1)^0,f,c
  1717   00169A  B0D8               	btfsc	status,0,c
  1718   00169C  2A52               	incf	(___awmod@divisor+1)^0,f,c
  1719   00169E                     l2290:
  1720   00169E  5051               	movf	___awmod@divisor^0,w,c
  1721   0016A0  1052               	iorwf	(___awmod@divisor+1)^0,w,c
  1722   0016A2  B4D8               	btfsc	status,2,c
  1723   0016A4  EF56  F00B         	goto	u1661
  1724   0016A8  EF58  F00B         	goto	u1660
  1725   0016AC                     u1661:
  1726   0016AC  EF7C  F00B         	goto	l2306
  1727   0016B0                     u1660:
  1728   0016B0  0E01               	movlw	1
  1729   0016B2  6E53               	movwf	___awmod@counter^0,c
  1730   0016B4  EF60  F00B         	goto	l2296
  1731   0016B8                     l2294:
  1732   0016B8  90D8               	bcf	status,0,c
  1733   0016BA  3651               	rlcf	___awmod@divisor^0,f,c
  1734   0016BC  3652               	rlcf	(___awmod@divisor+1)^0,f,c
  1735   0016BE  2A53               	incf	___awmod@counter^0,f,c
  1736   0016C0                     l2296:
  1737   0016C0  AE52               	btfss	(___awmod@divisor+1)^0,7,c
  1738   0016C2  EF65  F00B         	goto	u1671
  1739   0016C6  EF67  F00B         	goto	u1670
  1740   0016CA                     u1671:
  1741   0016CA  EF5C  F00B         	goto	l2294
  1742   0016CE                     u1670:
  1743   0016CE                     l2298:
  1744   0016CE  5051               	movf	___awmod@divisor^0,w,c
  1745   0016D0  5C4F               	subwf	___awmod@dividend^0,w,c
  1746   0016D2  5052               	movf	(___awmod@divisor+1)^0,w,c
  1747   0016D4  5850               	subwfb	(___awmod@dividend+1)^0,w,c
  1748   0016D6  A0D8               	btfss	status,0,c
  1749   0016D8  EF70  F00B         	goto	u1681
  1750   0016DC  EF72  F00B         	goto	u1680
  1751   0016E0                     u1681:
  1752   0016E0  EF76  F00B         	goto	l2302
  1753   0016E4                     u1680:
  1754   0016E4  5051               	movf	___awmod@divisor^0,w,c
  1755   0016E6  5E4F               	subwf	___awmod@dividend^0,f,c
  1756   0016E8  5052               	movf	(___awmod@divisor+1)^0,w,c
  1757   0016EA  5A50               	subwfb	(___awmod@dividend+1)^0,f,c
  1758   0016EC                     l2302:
  1759   0016EC  90D8               	bcf	status,0,c
  1760   0016EE  3252               	rrcf	(___awmod@divisor+1)^0,f,c
  1761   0016F0  3251               	rrcf	___awmod@divisor^0,f,c
  1762   0016F2  2E53               	decfsz	___awmod@counter^0,f,c
  1763   0016F4  EF67  F00B         	goto	l2298
  1764   0016F8                     l2306:
  1765   0016F8  5054               	movf	___awmod@sign^0,w,c
  1766   0016FA  B4D8               	btfsc	status,2,c
  1767   0016FC  EF82  F00B         	goto	u1691
  1768   001700  EF84  F00B         	goto	u1690
  1769   001704                     u1691:
  1770   001704  EF88  F00B         	goto	l2310
  1771   001708                     u1690:
  1772   001708  6C4F               	negf	___awmod@dividend^0,c
  1773   00170A  1E50               	comf	(___awmod@dividend+1)^0,f,c
  1774   00170C  B0D8               	btfsc	status,0,c
  1775   00170E  2A50               	incf	(___awmod@dividend+1)^0,f,c
  1776   001710                     l2310:
  1777   001710  C04F  F04F         	movff	___awmod@dividend,?___awmod
  1778   001714  C050  F050         	movff	___awmod@dividend+1,?___awmod+1
  1779   001718  0012               	return		;funcret
  1780   00171A                     __end_of___awmod:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function ___awdiv *****************
  1784 ;; Defined at:
  1785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  dividend        2    3[COMRAM] int 
  1788 ;;  divisor         2    5[COMRAM] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  quotient        2    9[COMRAM] int 
  1791 ;;  sign            1    8[COMRAM] unsigned char 
  1792 ;;  counter         1    7[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    3[COMRAM] int 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        8 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text11
  1817   0014EE                     __ptext11:
  1818                           	callstack 0
  1819   0014EE                     ___awdiv:
  1820                           	callstack 27
  1821   0014EE  0E00               	movlw	0
  1822   0014F0  6E54               	movwf	___awdiv@sign^0,c
  1823   0014F2  BE52               	btfsc	(___awdiv@divisor+1)^0,7,c
  1824   0014F4  EF80  F00A         	goto	u1580
  1825   0014F8  EF7E  F00A         	goto	u1581
  1826   0014FC                     u1581:
  1827   0014FC  EF86  F00A         	goto	l2242
  1828   001500                     u1580:
  1829   001500  6C51               	negf	___awdiv@divisor^0,c
  1830   001502  1E52               	comf	(___awdiv@divisor+1)^0,f,c
  1831   001504  B0D8               	btfsc	status,0,c
  1832   001506  2A52               	incf	(___awdiv@divisor+1)^0,f,c
  1833   001508  0E01               	movlw	1
  1834   00150A  6E54               	movwf	___awdiv@sign^0,c
  1835   00150C                     l2242:
  1836   00150C  BE50               	btfsc	(___awdiv@dividend+1)^0,7,c
  1837   00150E  EF8D  F00A         	goto	u1590
  1838   001512  EF8B  F00A         	goto	u1591
  1839   001516                     u1591:
  1840   001516  EF93  F00A         	goto	l2248
  1841   00151A                     u1590:
  1842   00151A  6C4F               	negf	___awdiv@dividend^0,c
  1843   00151C  1E50               	comf	(___awdiv@dividend+1)^0,f,c
  1844   00151E  B0D8               	btfsc	status,0,c
  1845   001520  2A50               	incf	(___awdiv@dividend+1)^0,f,c
  1846   001522  0E01               	movlw	1
  1847   001524  1A54               	xorwf	___awdiv@sign^0,f,c
  1848   001526                     l2248:
  1849   001526  0E00               	movlw	0
  1850   001528  6E56               	movwf	(___awdiv@quotient+1)^0,c
  1851   00152A  0E00               	movlw	0
  1852   00152C  6E55               	movwf	___awdiv@quotient^0,c
  1853   00152E  5051               	movf	___awdiv@divisor^0,w,c
  1854   001530  1052               	iorwf	(___awdiv@divisor+1)^0,w,c
  1855   001532  B4D8               	btfsc	status,2,c
  1856   001534  EF9E  F00A         	goto	u1601
  1857   001538  EFA0  F00A         	goto	u1600
  1858   00153C                     u1601:
  1859   00153C  EFC8  F00A         	goto	l2270
  1860   001540                     u1600:
  1861   001540  0E01               	movlw	1
  1862   001542  6E53               	movwf	___awdiv@counter^0,c
  1863   001544  EFA8  F00A         	goto	l2256
  1864   001548                     l2254:
  1865   001548  90D8               	bcf	status,0,c
  1866   00154A  3651               	rlcf	___awdiv@divisor^0,f,c
  1867   00154C  3652               	rlcf	(___awdiv@divisor+1)^0,f,c
  1868   00154E  2A53               	incf	___awdiv@counter^0,f,c
  1869   001550                     l2256:
  1870   001550  AE52               	btfss	(___awdiv@divisor+1)^0,7,c
  1871   001552  EFAD  F00A         	goto	u1611
  1872   001556  EFAF  F00A         	goto	u1610
  1873   00155A                     u1611:
  1874   00155A  EFA4  F00A         	goto	l2254
  1875   00155E                     u1610:
  1876   00155E                     l2258:
  1877   00155E  90D8               	bcf	status,0,c
  1878   001560  3655               	rlcf	___awdiv@quotient^0,f,c
  1879   001562  3656               	rlcf	(___awdiv@quotient+1)^0,f,c
  1880   001564  5051               	movf	___awdiv@divisor^0,w,c
  1881   001566  5C4F               	subwf	___awdiv@dividend^0,w,c
  1882   001568  5052               	movf	(___awdiv@divisor+1)^0,w,c
  1883   00156A  5850               	subwfb	(___awdiv@dividend+1)^0,w,c
  1884   00156C  A0D8               	btfss	status,0,c
  1885   00156E  EFBB  F00A         	goto	u1621
  1886   001572  EFBD  F00A         	goto	u1620
  1887   001576                     u1621:
  1888   001576  EFC2  F00A         	goto	l2266
  1889   00157A                     u1620:
  1890   00157A  5051               	movf	___awdiv@divisor^0,w,c
  1891   00157C  5E4F               	subwf	___awdiv@dividend^0,f,c
  1892   00157E  5052               	movf	(___awdiv@divisor+1)^0,w,c
  1893   001580  5A50               	subwfb	(___awdiv@dividend+1)^0,f,c
  1894   001582  8055               	bsf	___awdiv@quotient^0,0,c
  1895   001584                     l2266:
  1896   001584  90D8               	bcf	status,0,c
  1897   001586  3252               	rrcf	(___awdiv@divisor+1)^0,f,c
  1898   001588  3251               	rrcf	___awdiv@divisor^0,f,c
  1899   00158A  2E53               	decfsz	___awdiv@counter^0,f,c
  1900   00158C  EFAF  F00A         	goto	l2258
  1901   001590                     l2270:
  1902   001590  5054               	movf	___awdiv@sign^0,w,c
  1903   001592  B4D8               	btfsc	status,2,c
  1904   001594  EFCE  F00A         	goto	u1631
  1905   001598  EFD0  F00A         	goto	u1630
  1906   00159C                     u1631:
  1907   00159C  EFD4  F00A         	goto	l2274
  1908   0015A0                     u1630:
  1909   0015A0  6C55               	negf	___awdiv@quotient^0,c
  1910   0015A2  1E56               	comf	(___awdiv@quotient+1)^0,f,c
  1911   0015A4  B0D8               	btfsc	status,0,c
  1912   0015A6  2A56               	incf	(___awdiv@quotient+1)^0,f,c
  1913   0015A8                     l2274:
  1914   0015A8  C055  F04F         	movff	___awdiv@quotient,?___awdiv
  1915   0015AC  C056  F050         	movff	___awdiv@quotient+1,?___awdiv+1
  1916   0015B0  0012               	return		;funcret
  1917   0015B2                     __end_of___awdiv:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _InterruptManager *****************
  1921 ;; Defined at:
  1922 ;;		line 35 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		_INT0_ISR
  1945 ;;		_INT1_ISR
  1946 ;;		_INT2_ISR
  1947 ;;		_RB4_ISR
  1948 ;;		_RB5_ISR
  1949 ;;		_RB6_ISR
  1950 ;;		_RB7_ISR
  1951 ;;		_TMR0_ISR
  1952 ;; This function is called by:
  1953 ;;		Interrupt level 2
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	intcode
  1958   000008                     __pintcode:
  1959                           	callstack 0
  1960   000008                     _InterruptManager:
  1961                           	callstack 25
  1962                           
  1963                           ;incstack = 0
  1964   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1965   00000A  ED01  F008         	call	int_func,f	;refresh shadow registers
  1966                           
  1967                           	psect	intcode_body
  1968   001002                     __pintcode_body:
  1969                           	callstack 25
  1970   001002                     int_func:
  1971                           	callstack 25
  1972   001002  0006               	pop		; remove dummy address from shadow register refresh
  1973   001004  CFFA F04D          	movff	pclath,??_InterruptManager
  1974   001008  CFFB F04E          	movff	pclatu,??_InterruptManager+1
  1975   00100C                     
  1976                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 37:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  1977   00100C  A8F2               	btfss	242,4,c	;volatile
  1978   00100E  EF0B  F008         	goto	i2u93_41
  1979   001012  EF0D  F008         	goto	i2u93_40
  1980   001016                     i2u93_41:
  1981   001016  EF16  F008         	goto	i2l458
  1982   00101A                     i2u93_40:
  1983   00101A  A2F2               	btfss	242,1,c	;volatile
  1984   00101C  EF12  F008         	goto	i2u94_41
  1985   001020  EF14  F008         	goto	i2u94_40
  1986   001024                     i2u94_41:
  1987   001024  EF16  F008         	goto	i2l458
  1988   001028                     i2u94_40:
  1989   001028                     
  1990                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 38:         INT0_ISR();
  1991   001028  EC5D  F00D         	call	_INT0_ISR	;wreg free
  1992   00102C                     i2l458:
  1993                           
  1994                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 41:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  1995   00102C  A6F0               	btfss	240,3,c	;volatile
  1996   00102E  EF1B  F008         	goto	i2u95_41
  1997   001032  EF1D  F008         	goto	i2u95_40
  1998   001036                     i2u95_41:
  1999   001036  EF26  F008         	goto	i2l460
  2000   00103A                     i2u95_40:
  2001   00103A  A0F0               	btfss	240,0,c	;volatile
  2002   00103C  EF22  F008         	goto	i2u96_41
  2003   001040  EF24  F008         	goto	i2u96_40
  2004   001044                     i2u96_41:
  2005   001044  EF26  F008         	goto	i2l460
  2006   001048                     i2u96_40:
  2007   001048                     
  2008                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 42:         INT1_ISR();
  2009   001048  EC5B  F00D         	call	_INT1_ISR	;wreg free
  2010   00104C                     i2l460:
  2011                           
  2012                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 45:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  2013   00104C  A8F0               	btfss	240,4,c	;volatile
  2014   00104E  EF2B  F008         	goto	i2u97_41
  2015   001052  EF2D  F008         	goto	i2u97_40
  2016   001056                     i2u97_41:
  2017   001056  EF36  F008         	goto	i2l462
  2018   00105A                     i2u97_40:
  2019   00105A  A2F0               	btfss	240,1,c	;volatile
  2020   00105C  EF32  F008         	goto	i2u98_41
  2021   001060  EF34  F008         	goto	i2u98_40
  2022   001064                     i2u98_41:
  2023   001064  EF36  F008         	goto	i2l462
  2024   001068                     i2u98_40:
  2025   001068                     
  2026                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 46:         INT2_ISR();
  2027   001068  EC59  F00D         	call	_INT2_ISR	;wreg free
  2028   00106C                     i2l462:
  2029                           
  2030                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 49:    if((1 == INTCONbits.TMR0IE) && (1
      +                           == INTCONbits.TMR0IF)){
  2031   00106C  AAF2               	btfss	242,5,c	;volatile
  2032   00106E  EF3B  F008         	goto	i2u99_41
  2033   001072  EF3D  F008         	goto	i2u99_40
  2034   001076                     i2u99_41:
  2035   001076  EF46  F008         	goto	i2l464
  2036   00107A                     i2u99_40:
  2037   00107A  A4F2               	btfss	242,2,c	;volatile
  2038   00107C  EF42  F008         	goto	i2u100_41
  2039   001080  EF44  F008         	goto	i2u100_40
  2040   001084                     i2u100_41:
  2041   001084  EF46  F008         	goto	i2l464
  2042   001088                     i2u100_40:
  2043   001088                     
  2044                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 50:         TMR0_ISR();
  2045   001088  ECDA  F00C         	call	_TMR0_ISR	;wreg free
  2046   00108C                     i2l464:
  2047                           
  2048                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 60:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2049   00108C  A6F2               	btfss	242,3,c	;volatile
  2050   00108E  EF4B  F008         	goto	i2u101_41
  2051   001092  EF4D  F008         	goto	i2u101_40
  2052   001096                     i2u101_41:
  2053   001096  EF68  F008         	goto	i2l466
  2054   00109A                     i2u101_40:
  2055   00109A  A0F2               	btfss	242,0,c	;volatile
  2056   00109C  EF52  F008         	goto	i2u102_41
  2057   0010A0  EF54  F008         	goto	i2u102_40
  2058   0010A4                     i2u102_41:
  2059   0010A4  EF68  F008         	goto	i2l466
  2060   0010A8                     i2u102_40:
  2061   0010A8  A881               	btfss	129,4,c	;volatile
  2062   0010AA  EF59  F008         	goto	i2u103_41
  2063   0010AE  EF5B  F008         	goto	i2u103_40
  2064   0010B2                     i2u103_41:
  2065   0010B2  EF68  F008         	goto	i2l466
  2066   0010B6                     i2u103_40:
  2067   0010B6  0422               	decf	_RB4_Flag^0,w,c	;volatile
  2068   0010B8  A4D8               	btfss	status,2,c
  2069   0010BA  EF61  F008         	goto	i2u104_41
  2070   0010BE  EF63  F008         	goto	i2u104_40
  2071   0010C2                     i2u104_41:
  2072   0010C2  EF68  F008         	goto	i2l466
  2073   0010C6                     i2u104_40:
  2074   0010C6                     
  2075                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 61:        (PORTBbits.RB4 == HIGH) && (R
      +                          B4_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 62:         RB4_Flag = 0;
  2076   0010C6  0E00               	movlw	0
  2077   0010C8  6E22               	movwf	_RB4_Flag^0,c	;volatile
  2078   0010CA                     
  2079                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 63:         RB4_ISR(0);
  2080   0010CA  0E00               	movlw	0
  2081   0010CC  EC4A  F00D         	call	_RB4_ISR
  2082   0010D0                     i2l466:
  2083                           
  2084                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 66:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2085   0010D0  A6F2               	btfss	242,3,c	;volatile
  2086   0010D2  EF6D  F008         	goto	i2u105_41
  2087   0010D6  EF6F  F008         	goto	i2u105_40
  2088   0010DA                     i2u105_41:
  2089   0010DA  EF8A  F008         	goto	i2l468
  2090   0010DE                     i2u105_40:
  2091   0010DE  A0F2               	btfss	242,0,c	;volatile
  2092   0010E0  EF74  F008         	goto	i2u106_41
  2093   0010E4  EF76  F008         	goto	i2u106_40
  2094   0010E8                     i2u106_41:
  2095   0010E8  EF8A  F008         	goto	i2l468
  2096   0010EC                     i2u106_40:
  2097   0010EC  B881               	btfsc	129,4,c	;volatile
  2098   0010EE  EF7B  F008         	goto	i2u107_41
  2099   0010F2  EF7D  F008         	goto	i2u107_40
  2100   0010F6                     i2u107_41:
  2101   0010F6  EF8A  F008         	goto	i2l468
  2102   0010FA                     i2u107_40:
  2103   0010FA  5022               	movf	_RB4_Flag^0,w,c	;volatile
  2104   0010FC  A4D8               	btfss	status,2,c
  2105   0010FE  EF83  F008         	goto	i2u108_41
  2106   001102  EF85  F008         	goto	i2u108_40
  2107   001106                     i2u108_41:
  2108   001106  EF8A  F008         	goto	i2l468
  2109   00110A                     i2u108_40:
  2110   00110A                     
  2111                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 67:        (PORTBbits.RB4 == LOW) && (RB
      +                          4_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 68:         RB4_Flag = 1;
  2112   00110A  0E01               	movlw	1
  2113   00110C  6E22               	movwf	_RB4_Flag^0,c	;volatile
  2114   00110E                     
  2115                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 69:         RB4_ISR(1);
  2116   00110E  0E01               	movlw	1
  2117   001110  EC4A  F00D         	call	_RB4_ISR
  2118   001114                     i2l468:
  2119                           
  2120                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 72:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2121   001114  A6F2               	btfss	242,3,c	;volatile
  2122   001116  EF8F  F008         	goto	i2u109_41
  2123   00111A  EF91  F008         	goto	i2u109_40
  2124   00111E                     i2u109_41:
  2125   00111E  EFAC  F008         	goto	i2l470
  2126   001122                     i2u109_40:
  2127   001122  A0F2               	btfss	242,0,c	;volatile
  2128   001124  EF96  F008         	goto	i2u110_41
  2129   001128  EF98  F008         	goto	i2u110_40
  2130   00112C                     i2u110_41:
  2131   00112C  EFAC  F008         	goto	i2l470
  2132   001130                     i2u110_40:
  2133   001130  AA81               	btfss	129,5,c	;volatile
  2134   001132  EF9D  F008         	goto	i2u111_41
  2135   001136  EF9F  F008         	goto	i2u111_40
  2136   00113A                     i2u111_41:
  2137   00113A  EFAC  F008         	goto	i2l470
  2138   00113E                     i2u111_40:
  2139   00113E  0421               	decf	_RB5_Flag^0,w,c	;volatile
  2140   001140  A4D8               	btfss	status,2,c
  2141   001142  EFA5  F008         	goto	i2u112_41
  2142   001146  EFA7  F008         	goto	i2u112_40
  2143   00114A                     i2u112_41:
  2144   00114A  EFAC  F008         	goto	i2l470
  2145   00114E                     i2u112_40:
  2146   00114E                     
  2147                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 73:        (PORTBbits.RB5 == HIGH) && (R
      +                          B5_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 74:         RB5_Flag = 0;
  2148   00114E  0E00               	movlw	0
  2149   001150  6E21               	movwf	_RB5_Flag^0,c	;volatile
  2150   001152                     
  2151                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 75:         RB5_ISR(0);
  2152   001152  0E00               	movlw	0
  2153   001154  EC3D  F00D         	call	_RB5_ISR
  2154   001158                     i2l470:
  2155                           
  2156                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2157   001158  A6F2               	btfss	242,3,c	;volatile
  2158   00115A  EFB1  F008         	goto	i2u113_41
  2159   00115E  EFB3  F008         	goto	i2u113_40
  2160   001162                     i2u113_41:
  2161   001162  EFCE  F008         	goto	i2l472
  2162   001166                     i2u113_40:
  2163   001166  A0F2               	btfss	242,0,c	;volatile
  2164   001168  EFB8  F008         	goto	i2u114_41
  2165   00116C  EFBA  F008         	goto	i2u114_40
  2166   001170                     i2u114_41:
  2167   001170  EFCE  F008         	goto	i2l472
  2168   001174                     i2u114_40:
  2169   001174  BA81               	btfsc	129,5,c	;volatile
  2170   001176  EFBF  F008         	goto	i2u115_41
  2171   00117A  EFC1  F008         	goto	i2u115_40
  2172   00117E                     i2u115_41:
  2173   00117E  EFCE  F008         	goto	i2l472
  2174   001182                     i2u115_40:
  2175   001182  5021               	movf	_RB5_Flag^0,w,c	;volatile
  2176   001184  A4D8               	btfss	status,2,c
  2177   001186  EFC7  F008         	goto	i2u116_41
  2178   00118A  EFC9  F008         	goto	i2u116_40
  2179   00118E                     i2u116_41:
  2180   00118E  EFCE  F008         	goto	i2l472
  2181   001192                     i2u116_40:
  2182   001192                     
  2183                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 79:        (PORTBbits.RB5 == LOW) && (RB
      +                          5_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 80:         RB5_Flag = 1;
  2184   001192  0E01               	movlw	1
  2185   001194  6E21               	movwf	_RB5_Flag^0,c	;volatile
  2186   001196                     
  2187                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR(1);
  2188   001196  0E01               	movlw	1
  2189   001198  EC3D  F00D         	call	_RB5_ISR
  2190   00119C                     i2l472:
  2191                           
  2192                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 84:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2193   00119C  A6F2               	btfss	242,3,c	;volatile
  2194   00119E  EFD3  F008         	goto	i2u117_41
  2195   0011A2  EFD5  F008         	goto	i2u117_40
  2196   0011A6                     i2u117_41:
  2197   0011A6  EFF0  F008         	goto	i2l474
  2198   0011AA                     i2u117_40:
  2199   0011AA  A0F2               	btfss	242,0,c	;volatile
  2200   0011AC  EFDA  F008         	goto	i2u118_41
  2201   0011B0  EFDC  F008         	goto	i2u118_40
  2202   0011B4                     i2u118_41:
  2203   0011B4  EFF0  F008         	goto	i2l474
  2204   0011B8                     i2u118_40:
  2205   0011B8  AC81               	btfss	129,6,c	;volatile
  2206   0011BA  EFE1  F008         	goto	i2u119_41
  2207   0011BE  EFE3  F008         	goto	i2u119_40
  2208   0011C2                     i2u119_41:
  2209   0011C2  EFF0  F008         	goto	i2l474
  2210   0011C6                     i2u119_40:
  2211   0011C6  0420               	decf	_RB6_Flag^0,w,c	;volatile
  2212   0011C8  A4D8               	btfss	status,2,c
  2213   0011CA  EFE9  F008         	goto	i2u120_41
  2214   0011CE  EFEB  F008         	goto	i2u120_40
  2215   0011D2                     i2u120_41:
  2216   0011D2  EFF0  F008         	goto	i2l474
  2217   0011D6                     i2u120_40:
  2218   0011D6                     
  2219                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 85:        (PORTBbits.RB6 == HIGH) && (R
      +                          B6_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 86:         RB6_Flag = 0;
  2220   0011D6  0E00               	movlw	0
  2221   0011D8  6E20               	movwf	_RB6_Flag^0,c	;volatile
  2222   0011DA                     
  2223                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 87:         RB6_ISR(0);
  2224   0011DA  0E00               	movlw	0
  2225   0011DC  EC30  F00D         	call	_RB6_ISR
  2226   0011E0                     i2l474:
  2227                           
  2228                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 90:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2229   0011E0  A6F2               	btfss	242,3,c	;volatile
  2230   0011E2  EFF5  F008         	goto	i2u121_41
  2231   0011E6  EFF7  F008         	goto	i2u121_40
  2232   0011EA                     i2u121_41:
  2233   0011EA  EF12  F009         	goto	i2l476
  2234   0011EE                     i2u121_40:
  2235   0011EE  A0F2               	btfss	242,0,c	;volatile
  2236   0011F0  EFFC  F008         	goto	i2u122_41
  2237   0011F4  EFFE  F008         	goto	i2u122_40
  2238   0011F8                     i2u122_41:
  2239   0011F8  EF12  F009         	goto	i2l476
  2240   0011FC                     i2u122_40:
  2241   0011FC  BC81               	btfsc	129,6,c	;volatile
  2242   0011FE  EF03  F009         	goto	i2u123_41
  2243   001202  EF05  F009         	goto	i2u123_40
  2244   001206                     i2u123_41:
  2245   001206  EF12  F009         	goto	i2l476
  2246   00120A                     i2u123_40:
  2247   00120A  5020               	movf	_RB6_Flag^0,w,c	;volatile
  2248   00120C  A4D8               	btfss	status,2,c
  2249   00120E  EF0B  F009         	goto	i2u124_41
  2250   001212  EF0D  F009         	goto	i2u124_40
  2251   001216                     i2u124_41:
  2252   001216  EF12  F009         	goto	i2l476
  2253   00121A                     i2u124_40:
  2254   00121A                     
  2255                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 91:        (PORTBbits.RB6 == LOW) && (RB
      +                          6_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 92:         RB6_Flag = 1;
  2256   00121A  0E01               	movlw	1
  2257   00121C  6E20               	movwf	_RB6_Flag^0,c	;volatile
  2258   00121E                     
  2259                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 93:         RB6_ISR(1);
  2260   00121E  0E01               	movlw	1
  2261   001220  EC30  F00D         	call	_RB6_ISR
  2262   001224                     i2l476:
  2263                           
  2264                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 96:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2265   001224  A6F2               	btfss	242,3,c	;volatile
  2266   001226  EF17  F009         	goto	i2u125_41
  2267   00122A  EF19  F009         	goto	i2u125_40
  2268   00122E                     i2u125_41:
  2269   00122E  EF34  F009         	goto	i2l478
  2270   001232                     i2u125_40:
  2271   001232  A0F2               	btfss	242,0,c	;volatile
  2272   001234  EF1E  F009         	goto	i2u126_41
  2273   001238  EF20  F009         	goto	i2u126_40
  2274   00123C                     i2u126_41:
  2275   00123C  EF34  F009         	goto	i2l478
  2276   001240                     i2u126_40:
  2277   001240  AE81               	btfss	129,7,c	;volatile
  2278   001242  EF25  F009         	goto	i2u127_41
  2279   001246  EF27  F009         	goto	i2u127_40
  2280   00124A                     i2u127_41:
  2281   00124A  EF34  F009         	goto	i2l478
  2282   00124E                     i2u127_40:
  2283   00124E  041F               	decf	_RB7_Flag^0,w,c	;volatile
  2284   001250  A4D8               	btfss	status,2,c
  2285   001252  EF2D  F009         	goto	i2u128_41
  2286   001256  EF2F  F009         	goto	i2u128_40
  2287   00125A                     i2u128_41:
  2288   00125A  EF34  F009         	goto	i2l478
  2289   00125E                     i2u128_40:
  2290   00125E                     
  2291                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 97:        (PORTBbits.RB7 == HIGH) && (R
      +                          B7_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 98:         RB7_Flag = 0;
  2292   00125E  0E00               	movlw	0
  2293   001260  6E1F               	movwf	_RB7_Flag^0,c	;volatile
  2294   001262                     
  2295                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 99:         RB7_ISR(0);
  2296   001262  0E00               	movlw	0
  2297   001264  EC23  F00D         	call	_RB7_ISR
  2298   001268                     i2l478:
  2299                           
  2300                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 102:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  2301   001268  A6F2               	btfss	242,3,c	;volatile
  2302   00126A  EF39  F009         	goto	i2u129_41
  2303   00126E  EF3B  F009         	goto	i2u129_40
  2304   001272                     i2u129_41:
  2305   001272  EF56  F009         	goto	i2l481
  2306   001276                     i2u129_40:
  2307   001276  A0F2               	btfss	242,0,c	;volatile
  2308   001278  EF40  F009         	goto	i2u130_41
  2309   00127C  EF42  F009         	goto	i2u130_40
  2310   001280                     i2u130_41:
  2311   001280  EF56  F009         	goto	i2l481
  2312   001284                     i2u130_40:
  2313   001284  BE81               	btfsc	129,7,c	;volatile
  2314   001286  EF47  F009         	goto	i2u131_41
  2315   00128A  EF49  F009         	goto	i2u131_40
  2316   00128E                     i2u131_41:
  2317   00128E  EF56  F009         	goto	i2l481
  2318   001292                     i2u131_40:
  2319   001292  501F               	movf	_RB7_Flag^0,w,c	;volatile
  2320   001294  A4D8               	btfss	status,2,c
  2321   001296  EF4F  F009         	goto	i2u132_41
  2322   00129A  EF51  F009         	goto	i2u132_40
  2323   00129E                     i2u132_41:
  2324   00129E  EF56  F009         	goto	i2l481
  2325   0012A2                     i2u132_40:
  2326   0012A2                     
  2327                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 103:        (PORTBbits.RB7 == LOW) && (R
      +                          B7_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 104:         RB7_Flag = 1
      +                          ;
  2328   0012A2  0E01               	movlw	1
  2329   0012A4  6E1F               	movwf	_RB7_Flag^0,c	;volatile
  2330   0012A6                     
  2331                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 105:         RB7_ISR(1);
  2332   0012A6  0E01               	movlw	1
  2333   0012A8  EC23  F00D         	call	_RB7_ISR
  2334   0012AC                     i2l481:
  2335   0012AC  C04E  FFFB         	movff	??_InterruptManager+1,pclatu
  2336   0012B0  C04D  FFFA         	movff	??_InterruptManager,pclath
  2337   0012B4  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2338   0012B6  0011               	retfie		f
  2339   0012B8                     __end_of_InterruptManager:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _TMR0_ISR *****************
  2343 ;; Defined at:
  2344 ;;		line 118 in file "MCAL_layer/TIMER0/hal_timer0.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 1
  2365 ;; This function calls:
  2366 ;;		NULL
  2367 ;;		_tmr0_isr
  2368 ;; This function is called by:
  2369 ;;		_InterruptManager
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text13
  2374   0019B4                     __ptext13:
  2375                           	callstack 0
  2376   0019B4                     _TMR0_ISR:
  2377                           	callstack 25
  2378   0019B4                     
  2379                           ;MCAL_layer/TIMER0/hal_timer0.c: 119:     (INTCONbits.TMR0IF = 0);
  2380   0019B4  94F2               	bcf	242,2,c	;volatile
  2381   0019B6                     
  2382                           ;MCAL_layer/TIMER0/hal_timer0.c: 120:     TMR0H = ((timer0_preload) >> 8);
  2383   0019B6  5032               	movf	(_timer0_preload+1)^0,w,c
  2384   0019B8  6ED7               	movwf	215,c	;volatile
  2385   0019BA                     
  2386                           ;MCAL_layer/TIMER0/hal_timer0.c: 121:     TMR0L = (uint8)(timer0_preload);
  2387   0019BA  C031  FFD6         	movff	_timer0_preload,4054	;volatile
  2388   0019BE                     
  2389                           ;MCAL_layer/TIMER0/hal_timer0.c: 122:     if(Timer0_InterruptHandler){
  2390   0019BE  5033               	movf	_Timer0_InterruptHandler^0,w,c
  2391   0019C0  1034               	iorwf	(_Timer0_InterruptHandler+1)^0,w,c
  2392   0019C2  B4D8               	btfsc	status,2,c
  2393   0019C4  EFE6  F00C         	goto	i2u29_41
  2394   0019C8  EFE8  F00C         	goto	i2u29_40
  2395   0019CC                     i2u29_41:
  2396   0019CC  EFF5  F00C         	goto	i2l525
  2397   0019D0                     i2u29_40:
  2398   0019D0                     
  2399                           ;MCAL_layer/TIMER0/hal_timer0.c: 123:         Timer0_InterruptHandler();
  2400   0019D0  D802               	call	i2u30_48
  2401   0019D2  EFF5  F00C         	goto	i2u30_49
  2402   0019D6                     i2u30_48:
  2403   0019D6  0005               	push	
  2404   0019D8  6EFA               	movwf	pclath,c
  2405   0019DA  5033               	movf	_Timer0_InterruptHandler^0,w,c
  2406   0019DC  6EFD               	movwf	tosl,c
  2407   0019DE  5034               	movf	(_Timer0_InterruptHandler+1)^0,w,c
  2408   0019E0  6EFE               	movwf	tosh,c
  2409   0019E2  50F8               	movf	tblptru,w,c
  2410   0019E4  6EFF               	movwf	tosu,c
  2411   0019E6  50FA               	movf	pclath,w,c
  2412   0019E8  0012               	return		;indir
  2413   0019EA                     i2u30_49:
  2414   0019EA                     i2l525:
  2415   0019EA  0012               	return		;funcret
  2416   0019EC                     __end_of_TMR0_ISR:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _tmr0_isr *****************
  2420 ;; Defined at:
  2421 ;;		line 86 in file "application.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_TMR0_ISR
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text14
  2449   001AAE                     __ptext14:
  2450                           	callstack 0
  2451   001AAE                     _tmr0_isr:
  2452                           	callstack 25
  2453   001AAE                     
  2454                           ;application.c: 87:      number++;
  2455   001AAE  2A4B               	incf	_number^0,f,c
  2456   001AB0  0012               	return		;funcret
  2457   001AB2                     __end_of_tmr0_isr:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _RB7_ISR *****************
  2461 ;; Defined at:
  2462 ;;		line 162 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  RB7_Source      1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_InterruptManager
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text15
  2490   001A46                     __ptext15:
  2491                           	callstack 0
  2492   001A46                     _RB7_ISR:
  2493                           	callstack 26
  2494                           
  2495                           ;incstack = 0
  2496                           ;RB7_ISR@RB7_Source stored from wreg
  2497   001A46  6E4C               	movwf	RB7_ISR@RB7_Source^0,c
  2498   001A48                     
  2499                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 164:     (INTCONbits.RBIF = 0);
  2500   001A48  90F2               	bcf	242,0,c	;volatile
  2501   001A4A                     
  2502                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 167:     if(0 == RB7_Source){
  2503   001A4A  504C               	movf	RB7_ISR@RB7_Source^0,w,c
  2504   001A4C  A4D8               	btfss	status,2,c
  2505   001A4E  EF2B  F00D         	goto	i2u25_41
  2506   001A52  EF2D  F00D         	goto	i2u25_40
  2507   001A56                     i2u25_41:
  2508   001A56  EF2F  F00D         	goto	i2l1432
  2509   001A5A                     i2u25_40:
  2510   001A5A  EF2F  F00D         	goto	i2l313
  2511   001A5E                     i2l1432:
  2512   001A5E                     i2l313:
  2513   001A5E  0012               	return		;funcret
  2514   001A60                     __end_of_RB7_ISR:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _RB6_ISR *****************
  2518 ;; Defined at:
  2519 ;;		line 143 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  RB6_Source      1    wreg     unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_InterruptManager
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text16
  2547   001A60                     __ptext16:
  2548                           	callstack 0
  2549   001A60                     _RB6_ISR:
  2550                           	callstack 26
  2551                           
  2552                           ;incstack = 0
  2553                           ;RB6_ISR@RB6_Source stored from wreg
  2554   001A60  6E4C               	movwf	RB6_ISR@RB6_Source^0,c
  2555   001A62                     
  2556                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 145:     (INTCONbits.RBIF = 0);
  2557   001A62  90F2               	bcf	242,0,c	;volatile
  2558   001A64                     
  2559                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 148:     if(0 == RB6_Source){
  2560   001A64  504C               	movf	RB6_ISR@RB6_Source^0,w,c
  2561   001A66  A4D8               	btfss	status,2,c
  2562   001A68  EF38  F00D         	goto	i2u24_41
  2563   001A6C  EF3A  F00D         	goto	i2u24_40
  2564   001A70                     i2u24_41:
  2565   001A70  EF3C  F00D         	goto	i2l1418
  2566   001A74                     i2u24_40:
  2567   001A74  EF3C  F00D         	goto	i2l302
  2568   001A78                     i2l1418:
  2569   001A78                     i2l302:
  2570   001A78  0012               	return		;funcret
  2571   001A7A                     __end_of_RB6_ISR:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _RB5_ISR *****************
  2575 ;; Defined at:
  2576 ;;		line 124 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  RB5_Source      1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:        1 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_InterruptManager
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text17
  2604   001A7A                     __ptext17:
  2605                           	callstack 0
  2606   001A7A                     _RB5_ISR:
  2607                           	callstack 26
  2608                           
  2609                           ;incstack = 0
  2610                           ;RB5_ISR@RB5_Source stored from wreg
  2611   001A7A  6E4C               	movwf	RB5_ISR@RB5_Source^0,c
  2612   001A7C                     
  2613                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 126:     (INTCONbits.RBIF = 0);
  2614   001A7C  90F2               	bcf	242,0,c	;volatile
  2615   001A7E                     
  2616                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 129:     if(0 == RB5_Source){
  2617   001A7E  504C               	movf	RB5_ISR@RB5_Source^0,w,c
  2618   001A80  A4D8               	btfss	status,2,c
  2619   001A82  EF45  F00D         	goto	i2u23_41
  2620   001A86  EF47  F00D         	goto	i2u23_40
  2621   001A8A                     i2u23_41:
  2622   001A8A  EF49  F00D         	goto	i2l1404
  2623   001A8E                     i2u23_40:
  2624   001A8E  EF49  F00D         	goto	i2l291
  2625   001A92                     i2l1404:
  2626   001A92                     i2l291:
  2627   001A92  0012               	return		;funcret
  2628   001A94                     __end_of_RB5_ISR:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _RB4_ISR *****************
  2632 ;; Defined at:
  2633 ;;		line 105 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  RB4_Source      1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_InterruptManager
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text18
  2661   001A94                     __ptext18:
  2662                           	callstack 0
  2663   001A94                     _RB4_ISR:
  2664                           	callstack 26
  2665                           
  2666                           ;incstack = 0
  2667                           ;RB4_ISR@RB4_Source stored from wreg
  2668   001A94  6E4C               	movwf	RB4_ISR@RB4_Source^0,c
  2669   001A96                     
  2670                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 107:     (INTCONbits.RBIF = 0);
  2671   001A96  90F2               	bcf	242,0,c	;volatile
  2672   001A98                     
  2673                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 110:     if(0 == RB4_Source){
  2674   001A98  504C               	movf	RB4_ISR@RB4_Source^0,w,c
  2675   001A9A  A4D8               	btfss	status,2,c
  2676   001A9C  EF52  F00D         	goto	i2u22_41
  2677   001AA0  EF54  F00D         	goto	i2u22_40
  2678   001AA4                     i2u22_41:
  2679   001AA4  EF56  F00D         	goto	i2l1390
  2680   001AA8                     i2u22_40:
  2681   001AA8  EF56  F00D         	goto	i2l280
  2682   001AAC                     i2l1390:
  2683   001AAC                     i2l280:
  2684   001AAC  0012               	return		;funcret
  2685   001AAE                     __end_of_RB4_ISR:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _INT2_ISR *****************
  2689 ;; Defined at:
  2690 ;;		line 93 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		None
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_InterruptManager
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text19
  2718   001AB2                     __ptext19:
  2719                           	callstack 0
  2720   001AB2                     _INT2_ISR:
  2721                           	callstack 26
  2722   001AB2                     
  2723                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 95:     (INTCON3bits.INT2IF = 0);
  2724   001AB2  92F0               	bcf	240,1,c	;volatile
  2725   001AB4  0012               	return		;funcret
  2726   001AB6                     __end_of_INT2_ISR:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _INT1_ISR *****************
  2730 ;; Defined at:
  2731 ;;		line 84 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		None
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_InterruptManager
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text20
  2759   001AB6                     __ptext20:
  2760                           	callstack 0
  2761   001AB6                     _INT1_ISR:
  2762                           	callstack 26
  2763   001AB6                     
  2764                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 86:     (INTCON3bits.INT1IF = 0);
  2765   001AB6  90F0               	bcf	240,0,c	;volatile
  2766   001AB8  0012               	return		;funcret
  2767   001ABA                     __end_of_INT1_ISR:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _INT0_ISR *****************
  2771 ;; Defined at:
  2772 ;;		line 72 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		None
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_InterruptManager
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text21
  2800   001ABA                     __ptext21:
  2801                           	callstack 0
  2802   001ABA                     _INT0_ISR:
  2803                           	callstack 26
  2804   001ABA                     
  2805                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 74:     (INTCONbits.INT0IF = 0);
  2806   001ABA  92F2               	bcf	242,1,c	;volatile
  2807   001ABC  0012               	return		;funcret
  2808   001ABE                     __end_of_INT0_ISR:
  2809                           	callstack 0
  2810                           
  2811                           	psect	smallconst
  2812   001000                     __psmallconst:
  2813                           	callstack 0
  2814   001000  00                 	db	0
  2815   001001  00                 	db	0	; dummy byte at the end
  2816   000000                     
  2817                           	psect	text22
  2818   000000                     __ptext22:
  2819                           	callstack 0
  2820   000000                     
  2821                           	psect	rparam
  2822   000000                     
  2823                           	psect	temp
  2824   00005D                     btemp:
  2825                           	callstack 0
  2826   00005D                     	ds	1
  2827   000000                     int$flags	set	btemp
  2828   000000                     wtemp8	set	btemp+1
  2829   000000                     ttemp5	set	btemp+1
  2830   000000                     ttemp6	set	btemp+4
  2831   000000                     ttemp7	set	btemp+8
  2832                           tosu	equ	0xFFF
  2833                           tosh	equ	0xFFE
  2834                           tosl	equ	0xFFD
  2835                           stkptr	equ	0xFFC
  2836                           pclatu	equ	0xFFB
  2837                           pclath	equ	0xFFA
  2838                           pcl	equ	0xFF9
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           prodh	equ	0xFF4
  2844                           prodl	equ	0xFF3
  2845                           indf0	equ	0xFEF
  2846                           postinc0	equ	0xFEE
  2847                           postdec0	equ	0xFED
  2848                           preinc0	equ	0xFEC
  2849                           plusw0	equ	0xFEB
  2850                           fsr0h	equ	0xFEA
  2851                           fsr0l	equ	0xFE9
  2852                           wreg	equ	0xFE8
  2853                           indf1	equ	0xFE7
  2854                           postinc1	equ	0xFE6
  2855                           postdec1	equ	0xFE5
  2856                           preinc1	equ	0xFE4
  2857                           plusw1	equ	0xFE3
  2858                           fsr1h	equ	0xFE2
  2859                           fsr1l	equ	0xFE1
  2860                           bsr	equ	0xFE0
  2861                           indf2	equ	0xFDF
  2862                           postinc2	equ	0xFDE
  2863                           postdec2	equ	0xFDD
  2864                           preinc2	equ	0xFDC
  2865                           plusw2	equ	0xFDB
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         27
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16      92
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> ones(COMRAM[1]), seven_seg_obj(COMRAM[5]), seven_seg_obj$segment_pin(COMRAM[4]), tens(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 5
		 -> seven_seg_obj(COMRAM[5]), seven_seg_obj$segment_pin(COMRAM[4]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S332$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S470$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S470$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S69$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    seven_segment_init@seg	PTR const struct . size(1) Largest target is 5
		 -> seven_seg_obj(COMRAM[5]), 

    Timer0_Init@timer	PTR const struct . size(1) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_Init@timer$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), NULL(), 

    Timer0_Mode_Select@timer	PTR const struct . size(1) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_Mode_Select@timer$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    timer0_obj$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    Timer0_prescaler_config@timer	PTR const struct . size(1) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_prescaler_config@timer$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    Timer0_Reg_Size@timer	PTR const struct . size(1) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_Reg_Size@timer$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_isr(), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _init->_seven_segment_init
    _seven_segment_init->_gpio_pin_write_logic
    _Timer0_Init->_Timer0_prescaler_config
    _gpio_port_write_logic->___awdiv

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5663
                                             15 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
              _gpio_port_write_logic
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4369
                        _Timer0_Init
            _gpio_pin_direction_init
                 _seven_segment_init
 ---------------------------------------------------------------------------------
 (2) _seven_segment_init                                   2     1      1    2804
                                             11 COMRAM     2     1      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    1547
                                              3 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              7     6      1     863
                                              3 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _Timer0_Init                                          4     3      1     702
                                              5 COMRAM     4     3      1
                 _Timer0_Mode_Select
                    _Timer0_Reg_Size
            _Timer0_prescaler_config
 ---------------------------------------------------------------------------------
 (3) _Timer0_prescaler_config                              2     1      1     142
                                              3 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Reg_Size                                      1     0      1     120
                                              3 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Mode_Select                                   1     0      1     164
                                              3 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                6     5      1     394
                                             11 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     2     2      0     120
                                              1 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
                           _tmr0_isr *
 ---------------------------------------------------------------------------------
 (6) _tmr0_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)
   _init
     _Timer0_Init
       _Timer0_Mode_Select
       _Timer0_Reg_Size
       _Timer0_prescaler_config
     _gpio_pin_direction_init
     _seven_segment_init
       _gpio_pin_direction_init
       _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
     NULL(Fake) *
     _tmr0_isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      5C       1       73.0%
BITBIGSFRhlll       3E      0       0      38        0.0%
BITBIGSFRhllhh      18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      41        0.0%
DATA                 0      0      5C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Aug 05 03:05:00 2024

                ??_InterruptManager 004D                                  l31 171E  
                                l51 1668                                  l39 1A44  
                      ___awdiv@sign 0054                         fp__tmr0_isr 0000  
                               l117 13DC                                 l136 14EC  
                               l502 17CC                                 l167 19B2  
                               l504 183C                                 l532 1904  
                               l542 18B2                                 l550 1978  
                               l543 18B2                                 l784 15B0  
                               l797 1718           _RB5_InterruptHandler_HIGH 003F  
                               _ret 005C                        ___awmod@sign 0054  
                               tosl 0FFD                                 wreg 0FE8  
                   __end_of_RB4_ISR 1AAE                     __end_of_RB5_ISR 1A94  
                   __end_of_RB6_ISR 1A7A                     __end_of_RB7_ISR 1A60  
                              l2100 12CC                                l2110 139A  
                              l2102 12EC                                l2200 1824  
                              l2104 12F4                                l2112 13DA  
                              l2120 13DE                                l2202 1826  
                              l2210 183A                                l2106 134A  
                              l2122 13F2                                l2300 16E4  
                              l2204 1834                                l2132 14C0  
                              l2124 1412                                l2220 1A3A  
                              l2310 1710                                l2302 16EC  
                              l2230 19B0                                l2222 197C  
                              l2150 1902                                l2142 18B4  
                              l2206 1836                                l2126 141A  
                              l2134 14EA                                l2214 1A1C  
                              l2240 1508                                l2304 16F2  
                              l2224 197C                                l2160 1876  
                              l2152 183E                                l2144 18CC  
                              l2208 1838                                l2128 1470  
                              l2216 1A26                                l2320 1764  
                              l2250 152E                                l2242 150C  
                              l2234 14EE                                l2306 16F8  
                              l2226 198C                                l2162 188E  
                              l2154 1856                                l2170 1958  
                              l2146 18CE                                l2218 1A30  
                              l2322 1782                                l2314 171A  
                              l2260 1564                                l2252 1540  
                              l2244 151A                                l2236 14F2  
                              l2308 1708                                l2228 1990  
                              l2164 1894                                l2156 185C  
                              l2172 195E                                l2148 18EA  
                              l2180 15CA                                l2324 1792  
                              l2316 1748                                l2262 157A  
                              l2254 1548                                l2270 1590  
                              l2246 1522                                l2238 1500  
                              l2166 18AC                                l2158 1874  
                              l2174 1976                                l2190 17CE  
                              l2182 1666                                l2326 17A4  
                              l2318 1758                                l2272 15A0  
                              l2264 1582                                l2256 1550  
                              l2248 1526                                l2280 166E  
                              l2168 1940                                l2192 17E6  
                              l2424 14D4                                l2176 15B2  
                              l2274 15A8                                l2266 1584  
                              l2258 155E                                l2290 169E  
                              l2282 167C                                l2194 1802  
                              l2186 17B0                                l2426 13C4  
                              l2098 12B8                                l2178 15C2  
                              l2268 158A                                l2292 16B0  
                              l2284 1684                                l2196 1810  
                              l2188 17C4                                l2294 16B8  
                              l2286 1688                                l2278 166A  
                              l2198 1822                                l2296 16C0  
                              l2288 1696                                l2298 16CE  
                              u1410 13B0                                u1411 13AA  
                              u1500 1874                                u1420 13B2  
                              u1404 1368                                u1501 1870  
                              u1405 1364                                _LATA 0F89  
                              u1510 188E                                u1430 13F2  
                              _LATB 0F8A                                u1511 188A  
                              u1431 13EE                                _LATC 0F8B  
                              u1600 1540                                u1520 18AC  
                              u1440 1412                                _LATD 0F8C  
                              u1601 153C                                u1521 18A8  
                              u1441 140E                                _LATE 0F8D  
                              u1610 155E                                u1530 1958  
                              u1370 12CC                                u1611 155A  
                              u1531 1954                                u1371 12C8  
                              u1620 157A                                u1540 1976  
                              u1380 12EC                                u1700 17A4  
                              u1621 1576                                u1541 1972  
                              u1381 12E8                                u1701 17A0  
                              u1630 15A0                                u1470 18CC  
                              u1454 1438                                u1550 15C2  
                              u1631 159C                                u1471 18C8  
                              u1455 1434                                u1551 15BE  
                              u1640 167C                                u1480 1902  
                              u1560 17C4                                u1464 148E  
                              u1641 1678                                u1481 18FE  
                              u1561 17C0                                u1465 148A  
                              u1650 1696                                u1570 198C  
                              u1490 1856                                u1394 1312  
                              u1651 1692                                u1571 1988  
                              u1491 1852                                u1395 130E  
                              u1580 1500                                u1660 16B0  
                              u1581 14FC                                u1661 16AC  
                              u1590 151A                                u1670 16CE  
                              u1591 1516                                u1671 16CA  
                              u1680 16E4                                u1681 16E0  
                              u1690 1708                                u1691 1704  
                              u1787 174E                                u1797 1788  
                              i2l42 1AB0            _RB4_InterruptHandler_LOW 0041  
                              _main 171A                                _init 1A1C  
                              _ones 0030                                _tens 002F  
          _RB7_InterruptHandler_LOW 0035                                fsr2h 0FDA  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9            ?_gpio_pin_direction_init 004F  
                              btemp 005D                                prodl 0FF3  
                              start 000E                        ___param_bank 0000  
             _gpio_port_write_logic 197A                _gpio_pin_write_logic 13DE  
                  __end_of_INT0_ISR 1ABE                    __end_of_INT1_ISR 1ABA  
                  __end_of_INT2_ISR 1AB6                               ?_main 004C  
                             ?_init 004C                     __end_of___awdiv 15B2  
                   __end_of___awmod 171A                     ___awdiv@divisor 0051  
                             i2l302 1A78                               i2l313 1A5E  
                             i2l264 1AB8                               i2l280 1AAC  
                             i2l259 1ABC                               i2l291 1A92  
                             i2l460 104C                               i2l269 1AB4  
                             i2l525 19EA                               i2l470 1158  
                             i2l462 106C                               i2l472 119C  
                             i2l464 108C                               i2l481 12AC  
                             i2l474 11E0                               i2l466 10D0  
                             i2l458 102C                               i2l476 1224  
                             i2l468 1114                               i2l478 1268  
                   ___awdiv@counter 0053                               _TMR0H 0FD7  
                             _TMR0L 0FD6                               _PORTA 0F80  
                             _PORTB 0F81                               _PORTC 0F82  
                             _PORTD 0F83                               _PORTE 0F84  
                             _TRISA 0F92                               _TRISB 0F93  
                             _TRISC 0F94                               _TRISD 0F95  
                             _TRISE 0F96                    __end_of_TMR0_ISR 19EC  
   __end_of_Timer0_prescaler_config 1906                   ??_Timer0_Reg_Size 0050  
                             pclath 0FFA                               pclatu 0FFB  
                             tablat 0FF5                               ttemp5 005E  
                             ttemp6 0061                               ttemp7 0065  
                             status 0FD8                               wtemp8 005E  
              Timer0_Reg_Size@timer 004F                     __initialization 1906  
                      __end_of_main 17B0                        __end_of_init 1A46  
             ?_gpio_pin_write_logic 004F                              ??_main 005B  
                            ??_init 0059                       __activetblptr 0002  
                         ??_RB4_ISR 004C                           ??_RB5_ISR 004C  
                         ??_RB6_ISR 004C                           ??_RB7_ISR 004C  
                  ___awdiv@dividend 004F                              i2l2000 1122  
                            i2l2010 1166                              i2l2002 1130  
                            i2l2020 11AA                              i2l2012 1174  
                            i2l2004 113E                              i2l2030 11EE  
                            i2l2022 11B8                              i2l2014 1182  
                            i2l2006 114E                              i2l2040 1232  
                            i2l2032 11FC                              i2l2024 11C6  
                            i2l2016 1192                              i2l2008 1152  
                            i2l1410 1A62                              i2l2050 1276  
                            i2l2042 1240                              i2l2034 120A  
                            i2l2026 11D6                              i2l2018 1196  
                            i2l1404 1A92                              i2l1412 1A64  
                            i2l2052 1284                              i2l2044 124E  
                            i2l2036 121A                              i2l2028 11DA  
                            i2l1342 1AAE                              i2l2054 1292  
                            i2l2046 125E                              i2l2038 121E  
                            i2l1432 1A5E                              i2l1424 1A48  
                            i2l2056 12A2                              i2l2048 1262  
                            i2l1370 1AB6                              i2l1418 1A78  
                            i2l1426 1A4A                              i2l2058 12A6  
                            i2l1364 1ABA                              i2l1390 1AAC  
                            i2l1382 1A96                              i2l1376 1AB2  
                            i2l1384 1A98                              i2l1480 19B4  
                            i2l1482 19B6                              i2l1396 1A7C  
                            i2l1484 19BA                              i2l1398 1A7E  
                            i2l1486 19BE                              i2l1488 19D0  
                            i2l1970 1048                              i2l1962 100C  
                            i2l1980 109A                              i2l1972 105A  
                            i2l1964 101A                              i2l1990 10DE  
                            i2l1982 10A8                              i2l1974 1068  
                            i2l1966 1028                              i2l1992 10EC  
                            i2l1984 10B6                              i2l1976 107A  
                            i2l1968 103A                              i2l1994 10FA  
                            i2l1986 10C6                              i2l1978 1088  
                            i2l1996 110A                              i2l1988 10CA  
                            i2l1998 110E           gpio_port_write_logic@port 005A  
                     ??_Timer0_Init 0052              ?_gpio_port_write_logic 0057  
                         ??___awdiv 0053                           ??___awmod 0053  
                            clear_0 192C                    ___awdiv@quotient 0055  
                   ___awmod@divisor 0051                              isa$std 0001  
                            _number 004B                     ___awmod@counter 0053  
                  __end_of_tmr0_isr 1AB2                        __pdataCOMRAM 0001  
             seven_segment_init@seg 0057               seven_segment_init@ret 0058  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
           _Timer0_InterruptHandler 0033                          __accesstop 0080  
           __end_of__initialization 1932                           ?_INT0_ISR 004C  
                         ?_INT1_ISR 004C                           ?_INT2_ISR 004C  
                _seven_segment_init 15B2                       ___rparam_used 0001  
                 RB5_ISR@RB5_Source 004C              ??_gpio_pin_write_logic 0051  
                    __pcstackCOMRAM 004C                 ?_seven_segment_init 0057  
                         ?_TMR0_ISR 004C                 __end_of_Timer0_Init 183E  
              ??_seven_segment_init 0058               _INT0_InterruptHandler 0049  
                        ??_INT0_ISR 004C                          ??_INT1_ISR 004C  
                        ??_INT2_ISR 004C                          __pnvCOMRAM 005C  
gpio_pin_direction_init@_pin_config 004F                          ??_TMR0_ISR 004C  
                   _Timer0_Reg_Size 1940                   RB7_ISR@RB7_Source 004C  
                           _RB4_ISR 1A94                             _RB5_ISR 1A7A  
                           _RB6_ISR 1A60                             _RB7_ISR 1A46  
         _RB6_InterruptHandler_HIGH 003B                             i2u22_40 1AA8  
                           i2u22_41 1AA4                             i2u23_40 1A8E  
                           i2u30_48 19D6                             i2u23_41 1A8A  
                           i2u30_49 19EA                             i2u24_40 1A74  
                           i2u24_41 1A70                             i2u25_40 1A5A  
                           i2u25_41 1A56                             i2u29_40 19D0  
                           i2u29_41 19CC                             i2u93_40 101A  
                           i2u93_41 1016                             i2u94_40 1028  
                           i2u94_41 1024                             i2u95_40 103A  
                           i2u95_41 1036                             i2u96_40 1048  
                           i2u96_41 1044                             i2u97_40 105A  
                           i2u97_41 1056                             i2u98_40 1068  
                           i2u98_41 1064                             i2u99_40 107A  
                           i2u99_41 1076            _RB6_InterruptHandler_LOW 0039  
                         ?_tmr0_isr 004C                             __Hparam 0000  
                       _Timer0_Init 17B0                             __Lparam 0000  
                           ___awdiv 14EE                             ___awmod 166A  
                      __psmallconst 1000                             __pcinit 1906  
                           __ramtop 1000                             __ptext0 171A  
                           __ptext1 1A1C                             __ptext2 15B2  
                           __ptext3 13DE                             __ptext4 12B8  
                           __ptext5 17B0                             __ptext6 18B4  
                           __ptext7 1940                             __ptext8 183E  
                           __ptext9 197A                           _T0CONbits 0FD5  
                           _lat_reg 000B                    ___awmod@dividend 004F  
                    __pintcode_body 1002                end_of_initialization 1932  
                     __Lmediumconst 0000                             int_func 1002  
           ??_gpio_port_write_logic 0058                          ??_tmr0_isr 004C  
           __end_of_Timer0_Reg_Size 197A                          _timer0_obj 0023  
                           postdec1 0FE5                             postdec2 0FDD  
                           postinc0 0FEE                             postinc2 0FDE  
           _Timer0_prescaler_config 18B4               _INT1_InterruptHandler 0047  
                         _PORTBbits 0F81                    _InterruptManager 0008  
        __end_of_Timer0_Mode_Select 18B4             _gpio_pin_direction_init 12B8  
                     __pidataCOMRAM 19EC                      _timer0_preload 0031  
                  Timer0_Init@timer 0051                 start_initialization 1906  
         ??_Timer0_prescaler_config 0050                    ?_Timer0_Reg_Size 004F  
                          ?_RB4_ISR 004C                            ?_RB5_ISR 004C  
                          ?_RB6_ISR 004C                            ?_RB7_ISR 004C  
                       __pbssCOMRAM 0031               _INT2_InterruptHandler 0045  
                      ?_Timer0_Init 0051           ??_gpio_pin_direction_init 0050  
                         __pintcode 0008     gpio_pin_write_logic@_pin_config 004F  
                          ?___awdiv 004F                            ?___awmod 004F  
         gpio_pin_write_logic@logic 0050                         __smallconst 1000  
         _RB4_InterruptHandler_HIGH 0043           _RB7_InterruptHandler_HIGH 0037  
          _RB5_InterruptHandler_LOW 003D                            _INT0_ISR 1ABA  
                          _INT1_ISR 1AB6                            _INT2_ISR 1AB2  
                          _RB4_Flag 0022                            _RB5_Flag 0021  
                          _RB6_Flag 0020                            _RB7_Flag 001F  
                 RB4_ISR@RB4_Source 004C            __end_of_InterruptManager 12B8  
                          i2u100_40 1088                            i2u100_41 1084  
                          i2u101_40 109A                            i2u101_41 1096  
                          i2u110_40 1130                            i2u102_40 10A8  
                          i2u110_41 112C                            i2u102_41 10A4  
                          i2u111_40 113E                            i2u103_40 10B6  
                          i2u111_41 113A                            i2u103_41 10B2  
                          i2u120_40 11D6                            i2u112_40 114E  
                          i2u104_40 10C6                            i2u120_41 11D2  
                          i2u112_41 114A                            i2u104_41 10C2  
                          i2u121_40 11EE                            i2u113_40 1166  
                          i2u105_40 10DE                            i2u121_41 11EA  
                          i2u113_41 1162                            i2u105_41 10DA  
                          i2u130_40 1284                            i2u122_40 11FC  
                          i2u114_40 1174                            i2u106_40 10EC  
                          i2u130_41 1280                            i2u122_41 11F8  
                          i2u114_41 1170                            i2u106_41 10E8  
                          i2u131_40 1292                            i2u123_40 120A  
                          i2u115_40 1182                            i2u107_40 10FA  
                          i2u131_41 128E                            i2u123_41 1206  
                          i2u115_41 117E                            i2u107_41 10F6  
                          i2u132_40 12A2                            i2u124_40 121A  
                          i2u116_40 1192                            i2u108_40 110A  
                          i2u132_41 129E                            i2u124_41 1216  
                          i2u116_41 118E                            i2u108_41 1106  
                          i2u125_40 1232                            i2u117_40 11AA  
                          i2u109_40 1122                            i2u125_41 122E  
                          i2u117_41 11A6                            i2u109_41 111E  
                          i2u126_40 1240                            i2u118_40 11B8  
                          i2u126_41 123C                            i2u118_41 11B4  
                          i2u127_40 124E                            i2u119_40 11C6  
                          i2u127_41 124A                            i2u119_41 11C2  
                          i2u128_40 125E                            i2u128_41 125A  
                          i2u129_40 1276                            i2u129_41 1272  
     __end_of_gpio_port_write_logic 19B4                            _TMR0_ISR 19B4  
   __end_of_gpio_pin_direction_init 13DE             gpio_pin_write_logic@ret 0056  
                       _INTCON2bits 0FF1                         _INTCON3bits 0FF0  
                         copy_data0 191A                            __Hrparam 0000  
                          __Lrparam 0000                   RB6_ISR@RB6_Source 004C  
                     _seven_seg_obj 002A                  _Timer0_Mode_Select 183E  
               ?_Timer0_Mode_Select 004F                            __ptext10 166A  
                          __ptext11 14EE                            __ptext20 1AB6  
                          __ptext21 1ABA                            __ptext13 19B4  
                          __ptext22 0000                            __ptext14 1AAE  
                          __ptext15 1A46                            __ptext16 1A60  
                          __ptext17 1A7A                            __ptext18 1A94  
                          __ptext19 1AB2                            _tmr0_isr 1AAE  
              ??_Timer0_Mode_Select 0050                            isa$xinst 0000  
                          int$flags 005D                            _port_reg 0001  
                          _tris_reg 0015                      Timer0_Init@ret 0054  
                        _INTCONbits 0FF2        __end_of_gpio_pin_write_logic 14EE  
      Timer0_prescaler_config@timer 004F                            intlevel2 0000  
           Timer0_Mode_Select@timer 004F          __end_of_seven_segment_init 166A  
        gpio_port_write_logic@logic 0057          gpio_pin_direction_init@ret 0055  
          ?_Timer0_prescaler_config 004F                   ?_InterruptManager 004C  
